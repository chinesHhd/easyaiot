<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basiclab.iot.stream.mapper.UserMapper">

    <!-- 定义角色映射 -->
    <resultMap id="roleMap" type="com.basiclab.iot.stream.storager.dto.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="pushKey" column="push_key"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <association property="role" javaType="com.basiclab.iot.stream.storager.dto.Role">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="authority" column="role_authority"/>
            <result property="createTime" column="role_create_time"/>
            <result property="updateTime" column="role_update_time"/>
        </association>
    </resultMap>

    <!-- 添加用户 -->
    <insert id="add" parameterType="com.basiclab.iot.stream.storager.dto.User">
        INSERT INTO wvp_user (username, password, role_id, push_key,
                              create_time, update_time)
        VALUES (#{username}, #{password}, #{role.id}, #{pushKey},
                #{createTime}, #{updateTime})
    </insert>

    <!-- 更新用户信息 -->
    <update id="update" parameterType="com.basiclab.iot.stream.storager.dto.User">
        UPDATE wvp_user
        <set>
            update_time = #{updateTime},
            <if test="pushKey != null">push_key = #{pushKey},</if>
            <if test="role != null">role_id = #{role.id},</if>
            <if test="password != null">password = #{password},</if>
            <if test="username != null">username = #{username},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 删除用户 -->
    <delete id="delete">
        DELETE
        FROM wvp_user
        WHERE id != 1 AND id = #{id}
    </delete>

    <!-- 根据用户名和密码查询用户 -->
    <select id="select" resultMap="roleMap">
        SELECT u.*,
               r.name        AS role_name,
               r.authority   AS role_authority,
               r.create_time AS role_create_time,
               r.update_time AS role_update_time
        FROM wvp_user u,
             wvp_user_role r
        WHERE u.role_id = r.id
          AND u.username = #{username}
          AND u.password = #{password}
    </select>

    <!-- 根据ID查询用户 -->
    <select id="selectById" resultMap="roleMap">
        SELECT u.*,
               r.name        AS role_name,
               r.authority   AS role_authority,
               r.create_time AS role_create_time,
               r.update_time AS role_update_time
        FROM wvp_user u,
             wvp_user_role r
        WHERE u.role_id = r.id
          AND u.id = #{id}
    </select>

    <!-- 根据用户名查询用户 -->
    <select id="getUserByUsername" resultMap="roleMap">
        SELECT u.*,
               r.name        AS role_name,
               r.authority   AS role_authority,
               r.create_time AS role_create_time,
               r.update_time AS role_update_time
        FROM wvp_user u,
             wvp_user_role r
        WHERE u.role_id = r.id
          AND u.username = #{username}
    </select>

    <!-- 查询所有用户 -->
    <select id="selectAll" resultMap="roleMap">
        SELECT u.*,
               r.name        AS role_name,
               r.authority   AS role_authority,
               r.create_time AS role_create_time,
               r.update_time AS role_update_time
        FROM wvp_user u,
             wvp_user_role r
        WHERE u.role_id = r.id
    </select>

    <!-- 查询用户列表（精简字段） -->
    <select id="getUsers" resultMap="roleMap">
        SELECT u.id,
               u.username,
               u.push_key,
               u.role_id,
               r.name        AS role_name,
               r.authority   AS role_authority,
               r.create_time AS role_create_time,
               r.update_time AS role_update_time
        FROM wvp_user u
                 JOIN wvp_user_role r ON u.role_id = r.id
    </select>

    <!-- 更新推送密钥 -->
    <update id="changePushKey">
        UPDATE wvp_user
        SET push_key = #{pushKey}
        WHERE id = #{id}
    </update>

</mapper>