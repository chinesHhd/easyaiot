<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basiclab.iot.stream.mapper.PlatformChannelMapper">

    <!-- 批量添加通道 -->
    <insert id="addChannels">
        INSERT INTO wvp_platform_channel (platform_id, device_channel_id) VALUES
        <foreach collection="channelList" item="item" separator=",">
            (#{platformId}, #{item.gbId})
        </foreach>
    </insert>

    <!-- 根据设备ID删除通道 -->
    <delete id="delChannelForDeviceId">
        DELETE FROM wvp_platform_channel
        WHERE device_channel_id IN (
            SELECT temp.device_channel_id
            FROM (
                     SELECT pgc.device_channel_id
                     FROM wvp_platform_channel pgc
                              LEFT JOIN wvp_device_channel dc ON dc.id = pgc.device_channel_id
                     WHERE dc.channel_type = 0 AND dc.device_id = #{deviceId}
                 ) temp
        )
    </delete>

    <!-- 根据平台ID和通道ID查询设备 -->
    <select id="queryDeviceByPlatformIdAndChannelId" resultType="com.basiclab.iot.stream.bean.Device">
        SELECT d.*
        FROM wvp_platform_channel pgc
                 LEFT JOIN wvp_device_channel dc ON dc.id = pgc.device_channel_id
                 LEFT JOIN wvp_device d ON dc.device_id = d.device_id
        WHERE dc.channel_type = 0 AND dc.channel_id = #{channelId} AND pgc.platform_id = #{platformId}
    </select>

    <!-- 根据通道ID查询启用的上级平台列表 -->
    <select id="queryPlatFormListForGBWithGBId" resultType="com.basiclab.iot.stream.bean.Platform">
        SELECT wp.*
        FROM wvp_platform wp
        LEFT JOIN wvp_platform_channel wpgc ON wp.id = wpgc.platform_id
        WHERE wpgc.device_channel_id = #{channelId} AND wp.status = true
        AND wp.server_gb_id IN
        <foreach collection="platforms" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 根据平台ID和通道ID查询设备信息 -->
    <select id="queryDeviceInfoByPlatformIdAndChannelId" resultType="com.basiclab.iot.stream.bean.Device">
        SELECT dc.channel_id, dc.device_id, dc.name, d.manufacturer, d.model, d.firmware
        FROM wvp_platform_channel pgc
                 LEFT JOIN wvp_device_channel dc ON dc.id = pgc.device_channel_id
                 LEFT JOIN wvp_device d ON dc.device_id = d.device_id
        WHERE dc.channel_type = 0 AND dc.channel_id = #{channelId} AND pgc.platform_id = #{platformId}
    </select>

    <!-- 根据通道ID查询上级平台 -->
    <select id="queryParentPlatformByChannelId" resultType="com.basiclab.iot.stream.bean.Platform">
        SELECT wp.*
        FROM wvp_platform_channel pgc
                 LEFT JOIN wvp_device_channel dc ON dc.id = pgc.device_channel_id
                 LEFT JOIN wvp_platform wp ON wp.id = pgc.platform_id
        WHERE dc.channel_type = 0 AND dc.device_id = #{channelId}
    </select>

    <!-- 平台通道WEB列表查询 -->
    <select id="queryForPlatformForWebList" resultType="com.basiclab.iot.stream.bean.PlatformChannel">
        SELECT
        wpgc.id,
        wdc.id AS gb_id,
        wdc.data_type,
        wdc.data_device_id,
        wdc.create_time,
        wdc.update_time,
        wpgc.custom_device_id,
        wpgc.custom_name,
        wpgc.custom_manufacturer,
        wpgc.custom_model,
        wpgc.custom_owner,
        wpgc.custom_civil_code,
        wpgc.custom_block,
        wpgc.custom_address,
        wpgc.custom_parental,
        wpgc.custom_parent_id,
        wpgc.custom_safety_way,
        wpgc.custom_register_way,
        wpgc.custom_cert_num,
        wpgc.custom_certifiable,
        wpgc.custom_err_code,
        wpgc.custom_end_time,
        wpgc.custom_secrecy,
        wpgc.custom_ip_address,
        wpgc.custom_port,
        wpgc.custom_password,
        wpgc.custom_status,
        wpgc.custom_longitude,
        wpgc.custom_latitude,
        wpgc.custom_ptz_type,
        wpgc.custom_position_type,
        wpgc.custom_room_type,
        wpgc.custom_use_type,
        wpgc.custom_supply_light_type,
        wpgc.custom_direction_type,
        wpgc.custom_resolution,
        wpgc.custom_business_group_id,
        wpgc.custom_download_speed,
        wpgc.custom_svc_space_support_mod,
        wpgc.custom_svc_time_support_mode,
        COALESCE(wdc.gb_device_id, wdc.device_id) AS gb_device_id,
        COALESCE(wdc.gb_name, wdc.name) AS gb_name,
        COALESCE(wdc.gb_manufacturer, wdc.manufacturer) AS gb_manufacturer,
        COALESCE(wdc.gb_model, wdc.model) AS gb_model,
        COALESCE(wdc.gb_owner, wdc.owner) AS gb_owner,
        COALESCE(wdc.gb_civil_code, wdc.civil_code) AS gb_civil_code,
        COALESCE(wdc.gb_block, wdc.block) AS gb_block,
        COALESCE(wdc.gb_address, wdc.address) AS gb_address,
        COALESCE(wdc.gb_parental, wdc.parental) AS gb_parental,
        COALESCE(wdc.gb_parent_id, wdc.parent_id) AS gb_parent_id,
        COALESCE(wdc.gb_safety_way, wdc.safety_way) AS gb_safety_way,
        COALESCE(wdc.gb_register_way, wdc.register_way) AS gb_register_way,
        COALESCE(wdc.gb_cert_num, wdc.cert_num) AS gb_cert_num,
        COALESCE(wdc.gb_certifiable, wdc.certifiable) AS gb_certifiable,
        COALESCE(wdc.gb_err_code, wdc.err_code) AS gb_err_code,
        COALESCE(wdc.gb_end_time, wdc.end_time) AS gb_end_time,
        COALESCE(wdc.gb_secrecy, wdc.secrecy) AS gb_secrecy,
        COALESCE(wdc.gb_ip_address, wdc.ip_address) AS gb_ip_address,
        COALESCE(wdc.gb_port, wdc.port) AS gb_port,
        COALESCE(wdc.gb_password, wdc.password) AS gb_password,
        COALESCE(wdc.gb_status, wdc.status) AS gb_status,
        COALESCE(wdc.gb_longitude, wdc.longitude) AS gb_longitude,
        COALESCE(wdc.gb_latitude, wdc.latitude) AS gb_latitude,
        COALESCE(wdc.gb_ptz_type, wdc.ptz_type) AS gb_ptz_type,
        COALESCE(wdc.gb_position_type, wdc.position_type) AS gb_position_type,
        COALESCE(wdc.gb_room_type, wdc.room_type) AS gb_room_type,
        COALESCE(wdc.gb_use_type, wdc.use_type) AS gb_use_type,
        COALESCE(wdc.gb_supply_light_type, wdc.supply_light_type) AS gb_supply_light_type,
        COALESCE(wdc.gb_direction_type, wdc.direction_type) AS gb_direction_type,
        COALESCE(wdc.gb_resolution, wdc.resolution) AS gb_resolution,
        COALESCE(wdc.gb_business_group_id, wdc.business_group_id) AS gb_business_group_id,
        COALESCE(wdc.gb_download_speed, wdc.download_speed) AS gb_download_speed,
        COALESCE(wdc.gb_svc_space_support_mod, wdc.svc_space_support_mod) AS gb_svc_space_support_mod,
        COALESCE(wdc.gb_svc_time_support_mode, wdc.svc_time_support_mode) AS gb_svc_time_support_mode,
        wpgc.platform_id
        FROM wvp_device_channel wdc
        LEFT JOIN wvp_platform_channel wpgc ON wdc.id = wpgc.device_channel_id AND wpgc.platform_id = #{platformId}
        WHERE wdc.channel_type = 0
        <if test="query != null">
            AND (COALESCE(wdc.gb_device_id, wdc.device_id) LIKE CONCAT('%',#{query},'%')
            OR wpgc.custom_device_id LIKE CONCAT('%',#{query},'%')
            OR COALESCE(wdc.gb_name, wdc.name) LIKE CONCAT('%',#{query},'%')
            OR wpgc.custom_name LIKE CONCAT('%',#{query},'%')
        </if>
        <if test="online == true">
            AND COALESCE(wpgc.custom_status, wdc.gb_status, wdc.status) = 'ON'
        </if>
        <if test="online == false">
            AND COALESCE(wpgc.custom_status, wdc.gb_status, wdc.status) = 'OFF'
        </if>
        <if test="hasShare == true">
            AND wpgc.platform_id = #{platformId}
        </if>
        <if test="hasShare == false">
            AND wpgc.platform_id IS NULL
        </if>
        <if test="dataType != null">
            AND wdc.data_type = #{dataType}
        </if>
    </select>

    <!-- 根据平台ID和通道设备ID查询通道信息 -->
    <select id="queryOneWithPlatform" resultType="com.basiclab.iot.stream.bean.CommonGBChannel">
        SELECT
            wdc.id AS gb_id,
            wdc.data_type,
            wdc.data_device_id,
            wdc.create_time,
            wdc.update_time,
            COALESCE(wpgc.custom_device_id, wdc.gb_device_id, wdc.device_id) AS gb_device_id,
            COALESCE(wpgc.custom_name, wdc.gb_name, wdc.name) AS gb_name,
            COALESCE(wpgc.custom_manufacturer, wdc.gb_manufacturer, wdc.manufacturer) AS gb_manufacturer,
            COALESCE(wpgc.custom_model, wdc.gb_model, wdc.model) AS gb_model,
            COALESCE(wpgc.custom_owner, wdc.gb_owner, wdc.owner) AS gb_owner,
            COALESCE(wpgc.custom_civil_code, wdc.gb_civil_code, wdc.civil_code) AS gb_civil_code,
            COALESCE(wpgc.custom_block, wdc.gb_block, wdc.block) AS gb_block,
            COALESCE(wpgc.custom_address, wdc.gb_address, wdc.address) AS gb_address,
            COALESCE(wpgc.custom_parental, wdc.gb_parental, wdc.parental) AS gb_parental,
            COALESCE(wpgc.custom_parent_id, wdc.gb_parent_id, wdc.parent_id) AS gb_parent_id,
            COALESCE(wpgc.custom_safety_way, wdc.gb_safety_way, wdc.safety_way) AS gb_safety_way,
            COALESCE(wpgc.custom_register_way, wdc.gb_register_way, wdc.register_way) AS gb_register_way,
            COALESCE(wpgc.custom_cert_num, wdc.gb_cert_num, wdc.cert_num) AS gb_cert_num,
            COALESCE(wpgc.custom_certifiable, wdc.gb_certifiable, wdc.certifiable) AS gb_certifiable,
            COALESCE(wpgc.custom_err_code, wdc.gb_err_code, wdc.err_code) AS gb_err_code,
            COALESCE(wpgc.custom_end_time, wdc.gb_end_time, wdc.end_time) AS gb_end_time,
            COALESCE(wpgc.custom_secrecy, wdc.gb_secrecy, wdc.secrecy) AS gb_secrecy,
            COALESCE(wpgc.custom_ip_address, wdc.gb_ip_address, wdc.ip_address) AS gb_ip_address,
            COALESCE(wpgc.custom_port, wdc.gb_port, wdc.port) AS gb_port,
            COALESCE(wpgc.custom_password, wdc.gb_password, wdc.password) AS gb_password,
            COALESCE(wpgc.custom_status, wdc.gb_status, wdc.status) AS gb_status,
            COALESCE(wpgc.custom_longitude, wdc.gb_longitude, wdc.longitude) AS gb_longitude,
            COALESCE(wpgc.custom_latitude, wdc.gb_latitude, wdc.latitude) AS gb_latitude,
            COALESCE(wpgc.custom_ptz_type, wdc.gb_ptz_type, wdc.ptz_type) AS gb_ptz_type,
            COALESCE(wpgc.custom_position_type, wdc.gb_position_type, wdc.position_type) AS gb_position_type,
            COALESCE(wpgc.custom_room_type, wdc.gb_room_type, wdc.room_type) AS gb_room_type,
            COALESCE(wpgc.custom_use_type, wdc.gb_use_type, wdc.use_type) AS gb_use_type,
            COALESCE(wpgc.custom_supply_light_type, wdc.gb_supply_light_type, wdc.supply_light_type) AS gb_supply_light_type,
            COALESCE(wpgc.custom_direction_type, wdc.gb_direction_type, wdc.direction_type) AS gb_direction_type,
            COALESCE(wpgc.custom_resolution, wdc.gb_resolution, wdc.resolution) AS gb_resolution,
            COALESCE(wpgc.custom_business_group_id, wdc.gb_business_group_id, wdc.business_group_id) AS gb_business_group_id,
            COALESCE(wpgc.custom_download_speed, wdc.gb_download_speed, wdc.download_speed) AS gb_download_speed,
            COALESCE(wpgc.custom_svc_space_support_mod, wdc.gb_svc_space_support_mod, wdc.svc_space_support_mod) AS gb_svc_space_support_mod,
            COALESCE(wpgc.custom_svc_time_support_mode, wdc.gb_svc_time_support_mode, wdc.svc_time_support_mode) AS gb_svc_time_support_mode
        FROM wvp_device_channel wdc
                 LEFT JOIN wvp_platform_channel wpgc ON wdc.id = wpgc.device_channel_id
        WHERE wdc.channel_type = 0 AND wpgc.platform_id = #{platformId}
          AND COALESCE(wpgc.custom_device_id, wdc.gb_device_id, wdc.device_id) = #{channelDeviceId}
        ORDER BY wdc.id
    </select>

    <!-- 查询未共享的通道 -->
    <select id="queryNotShare" resultType="com.basiclab.iot.stream.bean.CommonGBChannel">
        SELECT
        wdc.id AS gb_id,
        wdc.data_type,
        wdc.data_device_id,
        wdc.create_time,
        wdc.update_time,
        COALESCE(wpgc.custom_device_id, wdc.gb_device_id, wdc.device_id) AS gb_device_id,
        COALESCE(wpgc.custom_name, wdc.gb_name, wdc.name) AS gb_name,
        COALESCE(wpgc.custom_manufacturer, wdc.gb_manufacturer, wdc.manufacturer) AS gb_manufacturer,
        COALESCE(wpgc.custom_model, wdc.gb_model, wdc.model) AS gb_model,
        COALESCE(wpgc.custom_owner, wdc.gb_owner, wdc.owner) AS gb_owner,
        COALESCE(wpgc.custom_civil_code, wdc.gb_civil_code, wdc.civil_code) AS gb_civil_code,
        COALESCE(wpgc.custom_block, wdc.gb_block, wdc.block) AS gb_block,
        COALESCE(wpgc.custom_address, wdc.gb_address, wdc.address) AS gb_address,
        COALESCE(wpgc.custom_parental, wdc.gb_parental, wdc.parental) AS gb_parental,
        COALESCE(wpgc.custom_parent_id, wdc.gb_parent_id, wdc.parent_id) AS gb_parent_id,
        COALESCE(wpgc.custom_safety_way, wdc.gb_safety_way, wdc.safety_way) AS gb_safety_way,
        COALESCE(wpgc.custom_register_way, wdc.gb_register_way, wdc.register_way) AS gb_register_way,
        COALESCE(wpgc.custom_cert_num, wdc.gb_cert_num, wdc.cert_num) AS gb_cert_num,
        COALESCE(wpgc.custom_certifiable, wdc.gb_certifiable, wdc.certifiable) AS gb_certifiable,
        COALESCE(wpgc.custom_err_code, wdc.gb_err_code, wdc.err_code) AS gb_err_code,
        COALESCE(wpgc.custom_end_time, wdc.gb_end_time, wdc.end_time) AS gb_end_time,
        COALESCE(wpgc.custom_secrecy, wdc.gb_secrecy, wdc.secrecy) AS gb_secrecy,
        COALESCE(wpgc.custom_ip_address, wdc.gb_ip_address, wdc.ip_address) AS gb_ip_address,
        COALESCE(wpgc.custom_port, wdc.gb_port, wdc.port) AS gb_port,
        COALESCE(wpgc.custom_password, wdc.gb_password, wdc.password) AS gb_password,
        COALESCE(wpgc.custom_status, wdc.gb_status, wdc.status) AS gb_status,
        COALESCE(wpgc.custom_longitude, wdc.gb_longitude, wdc.longitude) AS gb_longitude,
        COALESCE(wpgc.custom_latitude, wdc.gb_latitude, wdc.latitude) AS gb_latitude,
        COALESCE(wpgc.custom_ptz_type, wdc.gb_ptz_type, wdc.ptz_type) AS gb_ptz_type,
        COALESCE(wpgc.custom_position_type, wdc.gb_position_type, wdc.position_type) AS gb_position_type,
        COALESCE(wpgc.custom_room_type, wdc.gb_room_type, wdc.room_type) AS gb_room_type,
        COALESCE(wpgc.custom_use_type, wdc.gb_use_type, wdc.use_type) AS gb_use_type,
        COALESCE(wpgc.custom_supply_light_type, wdc.gb_supply_light_type, wdc.supply_light_type) AS gb_supply_light_type,
        COALESCE(wpgc.custom_direction_type, wdc.gb_direction_type, wdc.direction_type) AS gb_direction_type,
        COALESCE(wpgc.custom_resolution, wdc.gb_resolution, wdc.resolution) AS gb_resolution,
        COALESCE(wpgc.custom_business_group_id, wdc.gb_business_group_id, wdc.business_group_id) AS gb_business_group_id,
        COALESCE(wpgc.custom_download_speed, wdc.gb_download_speed, wdc.download_speed) AS gb_download_speed,
        COALESCE(wpgc.custom_svc_space_support_mod, wdc.gb_svc_space_support_mod, wdc.svc_space_support_mod) AS gb_svc_space_support_mod,
        COALESCE(wpgc.custom_svc_time_support_mode, wdc.gb_svc_time_support_mode, wdc.svc_time_support_mode) AS gb_svc_time_support_mode
        FROM wvp_device_channel wdc
        LEFT JOIN wvp_platform_channel wpgc ON wdc.id = wpgc.device_channel_id AND wpgc.platform_id = #{platformId}
        WHERE wdc.channel_type = 0 AND wpgc.platform_id IS NULL
        <if test="channelIds != null">
            AND wdc.id IN
            <foreach item="item" collection="channelIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <!-- 查询已共享的通道 -->
    <select id="queryShare" resultType="com.basiclab.iot.stream.bean.CommonGBChannel">
        SELECT
        wdc.id AS gb_id,
        wdc.data_type,
        wdc.data_device_id,
        wdc.create_time,
        wdc.update_time,
        wdc.gps_altitude,
        wdc.gps_speed,
        wdc.gps_direction,
        wdc.gps_time,
        COALESCE(wpgc.custom_device_id, wdc.gb_device_id, wdc.device_id) AS gb_device_id,
        COALESCE(wpgc.custom_name, wdc.gb_name, wdc.name) AS gb_name,
        COALESCE(wpgc.custom_manufacturer, wdc.gb_manufacturer, wdc.manufacturer) AS gb_manufacturer,
        COALESCE(wpgc.custom_model, wdc.gb_model, wdc.model) AS gb_model,
        COALESCE(wpgc.custom_owner, wdc.gb_owner, wdc.owner) AS gb_owner,
        COALESCE(wpgc.custom_civil_code, wdc.gb_civil_code, wdc.civil_code) AS gb_civil_code,
        COALESCE(wpgc.custom_block, wdc.gb_block, wdc.block) AS gb_block,
        COALESCE(wpgc.custom_address, wdc.gb_address, wdc.address) AS gb_address,
        COALESCE(wpgc.custom_parental, wdc.gb_parental, wdc.parental) AS gb_parental,
        COALESCE(wpgc.custom_parent_id, wdc.gb_parent_id, wdc.parent_id) AS gb_parent_id,
        COALESCE(wpgc.custom_safety_way, wdc.gb_safety_way, wdc.safety_way) AS gb_safety_way,
        COALESCE(wpgc.custom_register_way, wdc.gb_register_way, wdc.register_way) AS gb_register_way,
        COALESCE(wpgc.custom_cert_num, wdc.gb_cert_num, wdc.cert_num) AS gb_cert_num,
        COALESCE(wpgc.custom_certifiable, wdc.gb_certifiable, wdc.certifiable) AS gb_certifiable,
        COALESCE(wpgc.custom_err_code, wdc.gb_err_code, wdc.err_code) AS gb_err_code,
        COALESCE(wpgc.custom_end_time, wdc.gb_end_time, wdc.end_time) AS gb_end_time,
        COALESCE(wpgc.custom_secrecy, wdc.gb_secrecy, wdc.secrecy) AS gb_secrecy,
        COALESCE(wpgc.custom_ip_address, wdc.gb_ip_address, wdc.ip_address) AS gb_ip_address,
        COALESCE(wpgc.custom_port, wdc.gb_port, wdc.port) AS gb_port,
        COALESCE(wpgc.custom_password, wdc.gb_password, wdc.password) AS gb_password,
        COALESCE(wpgc.custom_status, wdc.gb_status, wdc.status) AS gb_status,
        COALESCE(wpgc.custom_longitude, wdc.gb_longitude, wdc.longitude) AS gb_longitude,
        COALESCE(wpgc.custom_latitude, wdc.gb_latitude, wdc.latitude) AS gb_latitude,
        COALESCE(wpgc.custom_ptz_type, wdc.gb_ptz_type, wdc.ptz_type) AS gb_ptz_type,
        COALESCE(wpgc.custom_position_type, wdc.gb_position_type, wdc.position_type) AS gb_position_type,
        COALESCE(wpgc.custom_room_type, wdc.gb_room_type, wdc.room_type) AS gb_room_type,
        COALESCE(wpgc.custom_use_type, wdc.gb_use_type, wdc.use_type) AS gb_use_type,
        COALESCE(wpgc.custom_supply_light_type, wdc.gb_supply_light_type, wdc.supply_light_type) AS gb_supply_light_type,
        COALESCE(wpgc.custom_direction_type, wdc.gb_direction_type, wdc.direction_type) AS gb_direction_type,
        COALESCE(wpgc.custom_resolution, wdc.gb_resolution, wdc.resolution) AS gb_resolution,
        COALESCE(wpgc.custom_business_group_id, wdc.gb_business_group_id, wdc.business_group_id) AS gb_business_group_id,
        COALESCE(wpgc.custom_download_speed, wdc.gb_download_speed, wdc.download_speed) AS gb_download_speed,
        COALESCE(wpgc.custom_svc_space_support_mod, wdc.gb_svc_space_support_mod, wdc.svc_space_support_mod) AS gb_svc_space_support_mod,
        COALESCE(wpgc.custom_svc_time_support_mode, wdc.gb_svc_time_support_mode, wdc.svc_time_support_mode) AS gb_svc_time_support_mode
        FROM wvp_device_channel wdc
        LEFT JOIN wvp_platform_channel wpgc ON wdc.id = wpgc.device_channel_id
        WHERE wdc.channel_type = 0 AND wpgc.platform_id = #{platformId}
        <if test="channelIds != null">
            AND wdc.id IN
            <foreach item="item" collection="channelIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        ORDER BY wdc.id
    </select>

    <!-- 移除平台下的指定通道 -->
    <delete id="removeChannelsWithPlatform">
        DELETE FROM wvp_platform_channel
        WHERE platform_id = #{platformId}
        <if test="channelList != null">
            AND device_channel_id IN
            <foreach item="item" collection="channelList" open="(" separator="," close=")">
                #{item.gbId}
            </foreach>
        </if>
    </delete>

    <!-- 移除指定通道 -->
    <delete id="removeChannels">
        DELETE FROM wvp_platform_channel
        WHERE 1=1
        <if test="channelList != null">
            AND device_channel_id IN
            <foreach item="item" collection="channelList" open="(" separator="," close=")">
                #{item.gbId}
            </foreach>
        </if>
    </delete>

    <!-- 添加平台分组 -->
    <insert id="addPlatformGroup">
        INSERT INTO wvp_platform_group (platform_id, group_id) VALUES
        <foreach collection="groupListNotShare" item="item" separator=",">
            (#{platformId}, #{item.id})
        </foreach>
    </insert>

    <!-- 添加平台区域 -->
    <insert id="addPlatformRegion">
        INSERT INTO wvp_platform_region (platform_id, region_id) VALUES
        <foreach collection="regionListNotShare" item="item" separator=",">
            (#{platformId}, #{item.id})
        </foreach>
    </insert>

    <!-- 移除平台分组 -->
    <delete id="removePlatformGroup">
        DELETE FROM wvp_platform_group
        WHERE platform_id = #{platformId}
        AND group_id IN
        <foreach collection="groupList" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </delete>

    <!-- 根据ID移除平台分组 -->
    <delete id="removePlatformGroupById">
        DELETE FROM wvp_platform_group
        WHERE platform_id = #{platformId} AND group_id = #{id}
    </delete>

    <!-- 根据ID移除平台区域 -->
    <delete id="removePlatformRegionById">
        DELETE FROM wvp_platform_region
        WHERE platform_id = #{platformId} AND region_id = #{id}
    </delete>

    <!-- 查询共享的子分组 -->
    <select id="queryShareChildrenGroup" resultType="com.basiclab.iot.stream.bean.Group">
        SELECT wcg.*
        FROM wvp_common_group wcg
                 LEFT JOIN wvp_platform_group wpg ON wpg.group_id = wcg.id AND wpg.platform_id = #{platformId}
        WHERE wpg.platform_id IS NOT NULL AND wcg.parent_id = #{parentId}
    </select>

    <!-- 查询共享的子区域 -->
    <select id="queryShareChildrenRegion" resultType="com.basiclab.iot.stream.bean.Region">
        SELECT wcr.*
        FROM wvp_common_region wcr
                 LEFT JOIN wvp_platform_region wpr ON wpr.region_id = wcr.id AND wpr.platform_id = #{platformId}
        WHERE wpr.platform_id IS NOT NULL AND wcr.parent_device_id = #{parentId}
    </select>

    <!-- 根据分组集合查询共享的父分组 -->
    <select id="queryShareParentGroupByGroupSet" resultType="com.basiclab.iot.stream.bean.Group">
        SELECT wcg.*
        FROM wvp_common_group wcg
        LEFT JOIN wvp_platform_group wpg ON wpg.group_id = wcg.id AND wpg.platform_id = #{platformId}
        WHERE wpg.platform_id IS NOT NULL AND wcg.id IN
        <foreach collection="groupSet" item="item" open="(" separator="," close=")">
            #{item.parentId}
        </foreach>
    </select>

    <!-- 根据区域集合查询共享的父区域 -->
    <select id="queryShareParentRegionByRegionSet" resultType="com.basiclab.iot.stream.bean.Region">
        SELECT wcr.*
        FROM wvp_common_region wcr
        LEFT JOIN wvp_platform_region wpr ON wpr.region_id = wcr.id AND wpr.platform_id = #{platformId}
        WHERE wpr.platform_id IS NOT NULL AND wcr.id IN
        <foreach collection="regionSet" item="item" open="(" separator="," close=")">
            #{item.parentId}
        </foreach>
    </select>

    <!-- 根据通道ID列表查询平台 -->
    <select id="queryPlatFormListByChannelList" resultType="com.basiclab.iot.stream.bean.Platform">
        SELECT pp.*
        FROM wvp_platform pp
        LEFT JOIN wvp_platform_channel pgc ON pp.id = pgc.platform_id
        LEFT JOIN wvp_device_channel dc ON dc.id = pgc.device_channel_id
        WHERE pgc.device_channel_id IN
        <foreach collection="ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 根据通道ID查询平台 -->
    <select id="queryPlatFormListByChannelId" resultType="com.basiclab.iot.stream.bean.Platform">
        SELECT pp.*
        FROM wvp_platform pp
                 LEFT JOIN wvp_platform_channel pgc ON pp.id = pgc.platform_id
                 LEFT JOIN wvp_device_channel dc ON dc.id = pgc.device_channel_id
        WHERE pgc.device_channel_id = #{channelId}
    </select>

    <!-- 根据平台ID移除所有通道 -->
    <delete id="removeChannelsByPlatformId">
        DELETE FROM wvp_platform_channel WHERE platform_id = #{platformId}
    </delete>

    <!-- 根据平台ID移除所有分组 -->
    <delete id="removePlatformGroupsByPlatformId">
        DELETE FROM wvp_platform_group WHERE platform_id = #{platformId}
    </delete>

    <!-- 根据平台ID移除所有区域 -->
    <delete id="removePlatformRegionByPlatformId">
        DELETE FROM wvp_platform_region WHERE platform_id = #{platformId}
    </delete>

    <!-- 更新自定义通道 -->
    <update id="updateCustomChannel">
        UPDATE wvp_platform_channel
        SET
            custom_device_id = #{customDeviceId},
            custom_name = #{customName},
            custom_manufacturer = #{customManufacturer},
            custom_model = #{customModel},
            custom_owner = #{customOwner},
            custom_civil_code = #{customCivilCode},
            custom_block = #{customBlock},
            custom_address = #{customAddress},
            custom_parental = #{customParental},
            custom_parent_id = #{customParentId},
            custom_safety_way = #{customSafetyWay},
            custom_register_way = #{customRegisterWay},
            custom_cert_num = #{customCertNum},
            custom_certifiable = #{customCertifiable},
            custom_err_code = #{customErrCode},
            custom_end_time = #{customEndTime},
            custom_secrecy = #{customSecrecy},
            custom_ip_address = #{customIpAddress},
            custom_port = #{customPort},
            custom_password = #{customPassword},
            custom_status = #{customStatus},
            custom_longitude = #{customLongitude},
            custom_latitude = #{customLatitude},
            custom_ptz_type = #{customPtzType},
            custom_position_type = #{customPositionType},
            custom_room_type = #{customRoomType},
            custom_use_type = #{customUseType},
            custom_supply_light_type = #{customSupplyLightType},
            custom_direction_type = #{customDirectionType},
            custom_resolution = #{customResolution},
            custom_business_group_id = #{customBusinessGroupId},
            custom_download_speed = #{customDownloadSpeed},
            custom_svc_space_support_mod = #{customSvcSpaceSupportMod},
            custom_svc_time_support_mode = #{customSvcTimeSupportMode}
        WHERE id = #{id}
    </update>

    <!-- 查询共享通道信息 -->
    <select id="queryShareChannel" resultType="com.basiclab.iot.stream.bean.CommonGBChannel">
        SELECT
            wdc.id AS gb_id,
            wdc.data_type,
            wdc.data_device_id,
            wdc.create_time,
            wdc.update_time,
            COALESCE(wpgc.custom_device_id, wdc.gb_device_id, wdc.device_id) AS gb_device_id,
            COALESCE(wpgc.custom_name, wdc.gb_name, wdc.name) AS gb_name,
            COALESCE(wpgc.custom_manufacturer, wdc.gb_manufacturer, wdc.manufacturer) AS gb_manufacturer,
            COALESCE(wpgc.custom_model, wdc.gb_model, wdc.model) AS gb_model,
            COALESCE(wpgc.custom_owner, wdc.gb_owner, wdc.owner) AS gb_owner,
            COALESCE(wpgc.custom_civil_code, wdc.gb_civil_code, wdc.civil_code) AS gb_civil_code,
            COALESCE(wpgc.custom_block, wdc.gb_block, wdc.block) AS gb_block,
            COALESCE(wpgc.custom_address, wdc.gb_address, wdc.address) AS gb_address,
            COALESCE(wpgc.custom_parental, wdc.gb_parental, wdc.parental) AS gb_parental,
            COALESCE(wpgc.custom_parent_id, wdc.gb_parent_id, wdc.parent_id) AS gb_parent_id,
            COALESCE(wpgc.custom_safety_way, wdc.gb_safety_way, wdc.safety_way) AS gb_safety_way,
            COALESCE(wpgc.custom_register_way, wdc.gb_register_way, wdc.register_way) AS gb_register_way,
            COALESCE(wpgc.custom_cert_num, wdc.gb_cert_num, wdc.cert_num) AS gb_cert_num,
            COALESCE(wpgc.custom_certifiable, wdc.gb_certifiable, wdc.certifiable) AS gb_certifiable,
            COALESCE(wpgc.custom_err_code, wdc.gb_err_code, wdc.err_code) AS gb_err_code,
            COALESCE(wpgc.custom_end_time, wdc.gb_end_time, wdc.end_time) AS gb_end_time,
            COALESCE(wpgc.custom_secrecy, wdc.gb_secrecy, wdc.secrecy) AS gb_secrecy,
            COALESCE(wpgc.custom_ip_address, wdc.gb_ip_address, wdc.ip_address) AS gb_ip_address,
            COALESCE(wpgc.custom_port, wdc.gb_port, wdc.port) AS gb_port,
            COALESCE(wpgc.custom_password, wdc.gb_password, wdc.password) AS gb_password,
            COALESCE(wpgc.custom_status, wdc.gb_status, wdc.status) AS gb_status,
            COALESCE(wpgc.custom_longitude, wdc.gb_longitude, wdc.longitude) AS gb_longitude,
            COALESCE(wpgc.custom_latitude, wdc.gb_latitude, wdc.latitude) AS gb_latitude,
            COALESCE(wpgc.custom_ptz_type, wdc.gb_ptz_type, wdc.ptz_type) AS gb_ptz_type,
            COALESCE(wpgc.custom_position_type, wdc.gb_position_type, wdc.position_type) AS gb_position_type,
            COALESCE(wpgc.custom_room_type, wdc.gb_room_type, wdc.room_type) AS gb_room_type,
            COALESCE(wpgc.custom_use_type, wdc.gb_use_type, wdc.use_type) AS gb_use_type,
            COALESCE(wpgc.custom_supply_light_type, wdc.gb_supply_light_type, wdc.supply_light_type) AS gb_supply_light_type,
            COALESCE(wpgc.custom_direction_type, wdc.gb_direction_type, wdc.direction_type) AS gb_direction_type,
            COALESCE(wpgc.custom_resolution, wdc.gb_resolution, wdc.resolution) AS gb_resolution,
            COALESCE(wpgc.custom_business_group_id, wdc.gb_business_group_id, wdc.business_group_id) AS gb_business_group_id,
            COALESCE(wpgc.custom_download_speed, wdc.gb_download_speed, wdc.download_speed) AS gb_download_speed,
            COALESCE(wpgc.custom_svc_space_support_mod, wdc.gb_svc_space_support_mod, wdc.svc_space_support_mod) AS gb_svc_space_support_mod,
            COALESCE(wpgc.custom_svc_time_support_mode, wdc.gb_svc_time_support_mode, wdc.svc_time_support_mode) AS gb_svc_time_support_mode
        FROM wvp_device_channel wdc
                 LEFT JOIN wvp_platform_channel wpgc ON wdc.id = wpgc.device_channel_id
        WHERE wdc.channel_type = 0 AND wpgc.platform_id = #{platformId} AND wdc.id = #{gbId}
    </select>

    <!-- 查询平台共享的分组 -->
    <select id="queryShareGroup" resultType="com.basiclab.iot.stream.bean.Group">
        SELECT wcg.*
        FROM wvp_common_group wcg
                 LEFT JOIN wvp_platform_group wpg ON wpg.group_id = wcg.id
        WHERE wpg.platform_id = #{platformId}
        ORDER BY wcg.id DESC
    </select>

    <!-- 查询平台共享的区域 -->
    <select id="queryShareRegion" resultType="com.basiclab.iot.stream.bean.Region">
        SELECT wcr.*
        FROM wvp_common_region wcr
                 LEFT JOIN wvp_platform_region wpr ON wpr.region_id = wcr.id
        WHERE wpr.platform_id = #{id}
        ORDER BY wcr.id DESC
    </select>

</mapper>