<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basiclab.iot.stream.mapper.PlatformMapper">

    <!-- 添加上级平台 -->
    <insert id="add" parameterType="com.basiclab.iot.stream.bean.Platform">
        INSERT INTO wvp_platform (
            enable, name, server_gb_id, server_gb_domain, server_ip, server_port,
            device_gb_id, device_ip, device_port, username, password, expires,
            keep_timeout, transport, character_set, ptz, rtcp, status, catalog_group,
            update_time, create_time, as_message_channel, send_stream_ip, auto_push_channel,
            catalog_with_platform, catalog_with_group, catalog_with_region, civil_code,
            manufacturer, model, address, register_way, secrecy, server_id
        ) VALUES (
                     #{enable}, #{name}, #{serverGBId}, #{serverGBDomain}, #{serverIp}, #{serverPort},
                     #{deviceGBId}, #{deviceIp}, #{devicePort}, #{username}, #{password}, #{expires},
                     #{keepTimeout}, #{transport}, #{characterSet}, #{ptz}, #{rtcp}, #{status}, #{catalogGroup},
                     #{updateTime}, #{createTime}, #{asMessageChannel}, #{sendStreamIp}, #{autoPushChannel},
                     #{catalogWithPlatform}, #{catalogWithGroup}, #{catalogWithRegion}, #{civilCode},
                     #{manufacturer}, #{model}, #{address}, #{registerWay}, #{secrecy}, #{serverId}
                 )
    </insert>

    <!-- 更新上级平台 -->
    <update id="update" parameterType="com.basiclab.iot.stream.bean.Platform">
        UPDATE wvp_platform
        SET
            update_time = #{updateTime},
            enable = #{enable},
            name = #{name},
            server_gb_id = #{serverGBId},
            server_gb_domain = #{serverGBDomain},
            server_ip = #{serverIp},
            server_port = #{serverPort},
            device_g极_id = #{deviceGBId},
            device_ip = #{deviceIp},
            device_port = #{devicePort},
            username = #{username},
            password = #{password},
            expires = #{expires},
            keep_timeout = #{keepTimeout},
            transport = #{transport},
            character_set = #{characterSet},
            ptz = #{ptz},
            rtcp = #{rtcp},
            status = #{status},
            catalog_group = #{catalogGroup},
            as_message_channel = #{asMessageChannel},
            send_stream_ip = #{sendStreamIp},
            auto_push_channel = #{autoPushChannel},
            catalog_with_platform = #{catalogWithPlatform},
            catalog_with_group = #{catalogWithGroup},
            catalog_with_region = #{catalogWithRegion},
            civil_code = #{civilCode},
            manufacturer = #{manufacturer},
            model = #{model},
            address = #{address},
            register_way = #{registerWay},
            server_id = #{serverId},
            secrecy = #{secrecy}
        WHERE id = #{id}
    </update>

    <!-- 删除上级平台 -->
    <delete id="delete">
        DELETE FROM wvp_platform WHERE id = #{id}
    </delete>

    <!-- 查询平台列表 (PostgreSQL优化) -->
    <select id="queryList" resultType="com.basiclab.iot.stream.bean.Platform">
        SELECT
        pp.*,
        (
        (SELECT COUNT(0) FROM wvp_platform_channel pc WHERE pc.platform_id = pp.id) +
        (SELECT COUNT(0) FROM wvp_platform_group pg WHERE pg.platform_id = pp.id) * pp.catalog_with_group +
        (SELECT COUNT(0) FROM wvp_platform_region pr WHERE pr.platform_id = pp.id) * pp.catalog_with_region +
        pp.catalog_with_platform
        ) AS channel_count
        FROM wvp_platform pp
        WHERE 1 = 1
        <if test="query != null and query != ''">
            AND (
            pp.name LIKE '%' || #{query} || '%' ESCAPE '/'
            OR pp.server_gb_id LIKE '%' || #{query} || '%' ESCAPE '/'
            )
        </if>
        ORDER BY pp.id DESC
    </select>

    <!-- 根据服务器ID查询启用的平台 -->
    <select id="queryEnableParentPlatformListByServerId" resultType="com.basiclab.iot.stream.bean.Platform">
        SELECT *
        FROM wvp_platform
        WHERE server_id = #{serverId}
          AND enable = #{enable}
    </select>

    <!-- 查询启用的消息通道平台 -->
    <select id="queryEnablePlatformListWithAsMessageChannel" resultType="com.basiclab.iot.stream.bean.Platform">
        SELECT *
        FROM wvp_platform
        WHERE enable = true
          AND as_message_channel = true
    </select>

    <!-- 根据平台GBID查询平台 -->
    <select id="getParentPlatByServerGBId" resultType="com.basiclab.iot.stream.bean.Platform">
        SELECT *
        FROM wvp_platform
        WHERE server_gb_id = #{platformGbId}
    </select>

    <!-- 根据ID查询平台 -->
    <select id="query" resultType="com.basiclab.iot.stream.bean.Platform">
        SELECT *
        FROM wvp_platform
        WHERE id = #{id}
    </select>

    <!-- 更新平台状态 -->
    <update id="updateStatus">
        UPDATE wvp_platform
        SET status = #{online},
            server_id = #{serverId}
        WHERE id = #{id}
    </update>

    <!-- 查询其他服务器的ID -->
    <select id="queryServerIdsWithEnableAndNotInServer" resultType="java.lang.String">
        SELECT server_id
        FROM wvp_platform
        WHERE enable = true
          AND server_id != #{serverId}
        GROUP BY server_id
    </select>

    <!-- 根据服务器ID查询平台 -->
    <select id="queryByServerId" resultType="com.basiclab.iot.stream.bean.Platform">
        SELECT *
        FROM wvp_platform
        WHERE server_id = #{serverId}
    </select>

    <!-- 查询所有平台 -->
    <select id="queryAll" resultType="com.basiclab.iot.stream.bean.Platform">
        SELECT *
        FROM wvp_platform
    </select>

    <!-- 查询指定服务器的启用平台 -->
    <select id="queryServerIdsWithEnableAndServer" resultType="com.basiclab.iot.stream.bean.Platform">
        SELECT *
        FROM wvp_platform
        WHERE enable = true
          AND server_id = #{serverId}
    </select>

    <!-- 下线指定服务器的所有平台 -->
    <update id="offlineAll">
        UPDATE wvp_platform
        SET status = false
        WHERE server_id = #{serverId}
    </update>

</mapper>