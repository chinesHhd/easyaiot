<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basiclab.iot.stream.mapper.StreamProxyMapper">

    <!-- 添加流代理 -->
    <insert id="add" parameterType="com.basiclab.iot.stream.streamProxy.bean.StreamProxy"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO wvp_stream_proxy (
            type, app, stream, relates_media_server_id, src_url,
            timeout, ffmpeg_cmd_key, rtsp_type, enable_audio, enable_mp4,
            enable, pulling, enable_remove_none_reader, enable_disable_none_reader,
            server_id, create_time
        ) VALUES (
                     #{type}, #{app}, #{stream}, #{relatesMediaServerId}, #{srcUrl},
                     #{timeout}, #{ffmpegCmdKey}, #{rtspType}, #{enableAudio}, #{enableMp4},
                     #{enable}, #{pulling}, #{enableRemoveNoneReader}, #{enableDisableNoneReader},
                     #{serverId}, #{createTime}
                 )
    </insert>

    <!-- 更新流代理 -->
    <update id="update" parameterType="com.basiclab.iot.stream.streamProxy.bean.StreamProxy">
        UPDATE wvp_stream_proxy
        SET
            type = #{type},
            app = #{app},
            stream = #{stream},
            relates_media_server_id = #{relatesMediaServerId},
            src_url = #{srcUrl},
            timeout = #{timeout},
            ffmpeg_cmd_key = #{ffmpegCmdKey},
            rtsp_type = #{rtspType},
            enable_audio = #{enableAudio},
            enable = #{enable},
            pulling = #{pulling},
            enable_remove_none_reader = #{enableRemoveNoneReader},
            enable_disable_none_reader = #{enableDisableNoneReader},
            enable_mp4 = #{enableMp4}
        WHERE id = #{id}
    </update>

    <!-- 根据应用和流删除 -->
    <delete id="delByAppAndStream">
        DELETE FROM wvp_stream_proxy
        WHERE app = #{app} AND stream = #{stream}
    </delete>

    <!-- 查询所有流代理（动态条件） -->
    <select id="selectAll" resultType="com.basiclab.iot.stream.streamProxy.bean.StreamProxy">
        SELECT *
        FROM wvp_stream_proxy
        WHERE 1 = 1
        <if test="query != null and query != ''">
            AND (app LIKE CONCAT('%', #{query}, '%') OR stream LIKE CONCAT('%', #{query}, '%'))
        </if>
        <if test="pulling != null">
            AND pulling = #{pulling}
        </if>
        <if test="mediaServerId != null and mediaServerId != ''">
            AND relates_media_server_id = #{mediaServerId}
        </if>
    </select>

    <!-- 根据应用和流查询单个 -->
    <select id="selectOneByAppAndStream" resultType="com.basiclab.iot.stream.streamProxy.bean.StreamProxy">
        SELECT *
        FROM wvp_stream_proxy
        WHERE app = #{app} AND stream = #{stream}
            LIMIT 1
    </select>

    <!-- 查询媒体服务器上的推送流 -->
    <select id="selectForPushingInMediaServer" resultType="com.basiclab.iot.stream.streamProxy.bean.StreamProxy">
        SELECT *
        FROM wvp_stream_proxy
        WHERE relates_media_server_id = #{mediaServerId}
          AND enable = #{enable}
    </select>

    <!-- 获取总数 -->
    <select id="getAllCount" resultType="int">
        SELECT COUNT(1)
        FROM wvp_stream_proxy
    </select>

    <!-- 获取在线数 -->
    <select id="getOnline" resultType="int">
        SELECT COUNT(1)
        FROM wvp_stream_proxy
        WHERE pulling = true
    </select>

    <!-- 根据ID删除 -->
    <delete id="delete">
        DELETE FROM wvp_stream_proxy
        WHERE id = #{id}
    </delete>

    <!-- 批量删除 -->
    <delete id="deleteByList">
        DELETE FROM wvp_stream_proxy
        WHERE id IN
        <foreach collection="streamProxiesForRemove" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </delete>

    <!-- 上线流代理 -->
    <update id="online">
        UPDATE wvp_stream_proxy
        SET pulling = true
        WHERE id = #{id}
    </update>

    <!-- 下线流代理 -->
    <update id="offline">
        UPDATE wvp_stream_proxy
        SET pulling = false
        WHERE id = #{id}
    </update>

    <!-- 根据ID查询 -->
    <select id="select" resultType="com.basiclab.iot.stream.streamProxy.bean.StreamProxy">
        SELECT *
        FROM wvp_stream_proxy
        WHERE id = #{id}
    </select>

    <!-- 移除流 -->
    <update id="removeStream">
        UPDATE wvp_stream_proxy
        SET
            pulling = false,
            media_server_id = NULL,
            stream_key = NULL
        WHERE id = #{id}
    </update>

    <!-- 添加流 -->
    <update id="addStream" parameterType="com.basiclab.iot.stream.streamProxy.bean.StreamProxy">
        UPDATE wvp_stream_proxy
        SET
            pulling = #{pulling},
            media_server_id = #{mediaServerId},
            stream_key = #{streamKey}
        WHERE id = #{id}
    </update>

</mapper>