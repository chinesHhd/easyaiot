<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basiclab.iot.stream.mapper.CommonGBChannelMapper">

    <!-- 基础字段映射 -->
    <resultMap id="commonGBChannelMap" type="com.basiclab.iot.stream.bean.CommonGBChannel">
        <id property="gbId" column="id" />
        <!-- 其他字段映射... -->
    </resultMap>

    <!-- 根据设备ID查询 -->
    <select id="queryByDeviceId" resultMap="commonGBChannelMap">
        SELECT *
        FROM wvp_device_channel
        WHERE gb_device_id = #{gbDeviceId}
    </select>

    <!-- 插入通道信息 (PostgreSQL) -->
    <insert id="insert" parameterType="com.basiclab.iot.stream.bean.CommonGBChannel"
            useGeneratedKeys="true" keyProperty="gbId" keyColumn="id">
        INSERT INTO wvp_device_channel (
            gb_device_id, data_type, data_device_id, create_time, update_time,
            gb_name, gb_manufacturer, gb_model, gb_owner, gb_civil_code,
            gb_block, gb_address, gb_parental, gb_parent_id, gb_safety_way,
            gb_register_way, gb_cert_num, gb_certifiable, gb_err_code, gb_end_time,
            gb_secrecy, gb_ip_address, gb_port, gb_password, gb_status,
            gb_longitude, gb_latitude, gb_ptz_type, gb_position_type, gb_room_type,
            gb_use_type, gb_supply_light_type, gb_direction_type, gb_resolution,
            gb_business_group_id, gb_download_speed, gb_svc_space_support_mod, gb_svc_time_support_mode
        ) VALUES (
                     #{gbDeviceId}, #{dataType}, #{dataDeviceId}, #{createTime}, #{updateTime},
                     #{gbName}, #{gbManufacturer}, #{gbModel}, #{gbOwner}, #{gbCivilCode},
                     #{gbBlock}, #{gbAddress}, #{gbParental}, #{gbParentId}, #{gbSafetyWay},
                     #{gbRegisterWay}, #{gbCertNum}, #{gbCertifiable}, #{gbErrCode}, #{gbEndTime},
                     #{gbSecrecy}, #{gbIpAddress}, #{gbPort}, #{gbPassword}, #{gbStatus},
                     #{gbLongitude}, #{gbLatitude}, #{gbPtzType}, #{gbPositionType}, #{gbRoomType},
                     #{gbUseType}, #{gbSupplyLightType}, #{gbDirectionType}, #{gbResolution},
                     #{gbBusinessGroupId}, #{gbDownloadSpeed}, #{gbSvcSpaceSupportMod}, #{gbSvcTimeSupportMode}
                 )
    </insert>

    <!-- 根据ID查询 -->
    <select id="queryById" resultMap="commonGBChannelMap">
        SELECT *
        FROM wvp_device_channel
        WHERE id = #{gbId}
    </select>

    <!-- 删除通道 -->
    <delete id="delete">
        DELETE FROM wvp_device_channel
        WHERE id = #{gbId}
    </delete>

    <!-- 更新通道信息 (PostgreSQL) -->
    <update id="update" parameterType="com.basiclab.iot.stream.bean.CommonGBChannel">
        UPDATE wvp_device_channel
        SET
            update_time = #{updateTime},
            gb_device_id = #{gbDeviceId},
            gb_name = #{gbName},
            gb_manufacturer = #{gbManufacturer},
            gb_model = #{gbModel},
            gb_owner = #{gbOwner},
            gb_civil_code = #{gbCivilCode},
            gb_block = #{gbBlock},
            gb_address = #{gbAddress},
            gb_parental = #{gbParental},
            gb_parent_id = #{gbParentId},
            gb_safety_way = #{gbSafetyWay},
            gb_register_way = #{gbRegisterWay},
            gb_cert_num = #{gbCertNum},
            gb_certifiable = #{gbCertifiable},
            gb_err_code = #{gbErrCode},
            gb_end_time = #{gbEndTime},
            gb_ip_address = #{gbIpAddress},
            gb_port = #{gbPort},
            gb_password = #{gbPassword},
            gb_status = #{gbStatus},
            gb_longitude = #{gbLongitude},
            gb_latitude = #{gbLatitude},
            gb_ptz_type = #{gbPtzType},
            gb_position_type = #{gbPositionType},
            gb_room_type = #{gbRoomType},
            gb_use_type = #{gbUseType},
            gb_supply_light_type = #{gbSupplyLightType},
            gb_direction_type = #{gbDirectionType},
            gb_resolution = #{gbResolution},
            gb_business_group_id = #{gbBusinessGroupId},
            gb_download_speed = #{gbDownloadSpeed},
            gb_svc_space_support_mod = #{gbSvcSpaceSupportMod},
            gb_svc_time_support_mode = #{gbSvcTimeSupportMode}
        WHERE id = #{gbId}
    </update>

    <!-- 更新通道状态 -->
    <update id="updateStatusById">
        UPDATE wvp_device_channel
        SET gb_status = #{status}
        WHERE id = #{gbId}
    </update>

    <!-- 批量更新状态 (PostgreSQL 优化) -->
    <update id="updateStatusForListById">
        UPDATE wvp_device_channel
        SET gb_status = #{status}
        WHERE id IN
        <foreach collection="commonGBChannels" item="item" open="(" separator="," close=")">
            #{item.gbId}
        </foreach>
    </update>

    <!-- 批量插入通道 (PostgreSQL 优化) -->
    <insert id="batchAdd" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="gbId">
        INSERT INTO wvp_device_channel (
        gb_device_id, data_type, data_device_id, create_time, update_time,
        gb_name, gb_manufacturer, gb_model, gb_owner, gb_civil_code,
        gb_block, gb_address, gb_parental, gb_parent_id, gb_safety_way,
        gb_register_way, gb_cert_num, gb_certifiable, gb_err_code, gb_end_time,
        gb_secrecy, gb_ip_address, gb_port, gb_password, gb_status,
        gb_longitude, gb_latitude, gb_ptz_type, gb_position_type, gb_room_type,
        gb_use_type, gb_supply_light_type, gb_direction_type, gb_resolution,
        gb_business_group_id, gb_download_speed, gb_svc_space_support_mod, gb_svc_time_support_mode
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.gbDeviceId}, #{item.dataType}, #{item.dataDeviceId}, #{item.createTime}, #{item.updateTime},
            #{item.gbName}, #{item.gbManufacturer}, #{item.gbModel}, #{item.gbOwner}, #{item.gbCivilCode},
            #{item.gbBlock}, #{item.gbAddress}, #{item.gbParental}, #{item.gbParentId}, #{item.gbSafetyWay},
            #{item.gbRegisterWay}, #{item.gbCertNum}, #{item.gbCertifiable}, #{item.gbErrCode}, #{item.gbEndTime},
            #{item.gbSecrecy}, #{item.gbIpAddress}, #{item.gbPort}, #{item.gbPassword}, #{item.gbStatus},
            #{item.gbLongitude}, #{item.gbLatitude}, #{item.gbPtzType}, #{item.gbPositionType}, #{item.gbRoomType},
            #{item.gbUseType}, #{item.gbSupplyLightType}, #{item.gbDirectionType}, #{item.gbResolution},
            #{item.gbBusinessGroupId}, #{item.gbDownloadSpeed}, #{item.gbSvcSpaceSupportMod}, #{item.gbSvcTimeSupportMode}
            )
        </foreach>
    </insert>

    <!-- 批量更新状态 (PostgreSQL 优化) -->
    <update id="updateStatus">
        UPDATE wvp_device_channel
        SET gb_status = CASE id
        <foreach collection="commonGBChannels" item="item">
            WHEN #{item.gbId} THEN #{item.gbStatus}
        </foreach>
        END
        WHERE id IN
        <foreach collection="commonGBChannels" item="item" open="(" separator="," close=")">
            #{item.gbId}
        </foreach>
    </update>

    <!-- 重置通道信息 -->
    <update id="reset">
        UPDATE wvp_device_channel
        SET
            update_time = #{updateTime},
            gb_device_id = NULL,
            gb_name = NULL,
            gb_manufacturer = NULL,
            gb_model = NULL,
            gb_owner = NULL,
            gb_civil_code = NULL,
            gb_block = NULL,
            gb_address = NULL,
            gb_parental = NULL,
            gb_parent_id = NULL,
            gb_safety_way = NULL,
            gb_register_way = NULL,
            gb_cert_num = NULL,
            gb_certifiable = NULL,
            gb_err_code = NULL,
            gb_end_time = NULL,
            gb_secrecy = NULL,
            gb_ip_address = NULL,
            gb_port = NULL,
            gb_password = NULL,
            gb_status = NULL,
            gb_longitude = NULL,
            gb_latitude = NULL,
            gb_ptz_type = NULL,
            gb_position_type = NULL,
            gb_room_type = NULL,
            gb_use_type = NULL,
            gb_supply_light_type = NULL,
            gb_direction_type = NULL,
            gb_resolution = NULL,
            gb_business_group_id = NULL,
            gb_download_speed = NULL,
            gb_svc_space_support_mod = NULL,
            gb_svc_time_support_mode = NULL
        WHERE id = #{id}
          AND data_type = #{dataType}
          AND data_device_id = #{dataDeviceId}
    </update>

    <!-- 根据ID集合查询 -->
    <select id="queryByIds" resultMap="commonGBChannelMap">
        SELECT *
        FROM wvp_device_channel
        WHERE id IN
        <foreach collection="ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 批量删除 -->
    <delete id="batchDelete">
        DELETE FROM wvp_device_channel
        WHERE id IN
        <foreach collection="channelListInDb" item="item" open="(" separator="," close=")">
            #{item.gbId}
        </foreach>
    </delete>

    <!-- 根据行政区划查询 (PostgreSQL 优化) -->
    <select id="queryListByCivilCode" resultMap="commonGBChannelMap">
        SELECT *
        FROM wvp_device_channel
        WHERE 1 = 1
        <if test="query != null and query != ''">
            AND (gb_device_id LIKE '%' || #{query} || '%'
            OR gb_name LIKE '%' || #{query} || '%')
        </if>
        <if test="online != null">
            AND gb_status = #{online, typeHandler=org.apache.ibatis.type.EnumTypeHandler}
        </if>
        <if test="dataType != null">
            AND data_type = #{dataType}
        </if>
        <if test="civilCode != null and civilCode != ''">
            AND gb_civil_code = #{civilCode}
        </if>
    </select>

    <!-- 根据父ID查询 (PostgreSQL 优化) -->
    <select id="queryListByParentId" resultMap="commonGBChannelMap">
        SELECT *
        FROM wvp_device_channel
        WHERE 1 = 1
        <if test="query != null and query != ''">
            AND (gb_device_id LIKE '%' || #{query} || '%'
            OR gb_name LIKE '%' || #{query} || '%')
        </if>
        <if test="online != null">
            AND gb_status = #{online, typeHandler=org.apache.ibatis.type.EnumTypeHandler}
        </if>
        <if test="dataType != null">
            AND data_type = #{dataType}
        </if>
        <if test="groupDeviceId != null and groupDeviceId != ''">
            AND gb_parent_id = #{groupDeviceId}
        </if>
    </select>

    <!-- 查询行政区划树 (PostgreSQL 优化) -->
    <select id="queryForRegionTreeByCivilCode" resultType="com.basiclab.iot.stream.bean.RegionTree">
        SELECT
        id,
        ('channel' || id) AS tree_id,
        COALESCE(gb_device_id, device_id) AS device_id,
        COALESCE(gb_name, name) AS name,
        COALESCE(gb_parent_id, parent_id) AS parent_device_id,
        COALESCE(gb_status, status) AS status,
        1 AS type,
        true AS is_leaf
        FROM wvp_device_channel
        WHERE COALESCE(gb_civil_code, civil_code) = #{parentDeviceId}
        <if test="query != null and query != ''">
            AND (
            COALESCE(gb_device_id, device_id) LIKE '%' || #{query} || '%'
            OR COALESCE(gb_name, name) LIKE '%' || #{query} || '%'
            )
        </if>
    </select>

    <!-- 移除行政区划代码 -->
    <update id="removeCivilCode">
        UPDATE wvp_device_channel
        SET gb_civil_code = NULL,
        civil_code = NULL
        WHERE gb_civil_code IN
        <foreach collection="allChildren" item="item" open="(" separator="," close=")">
            #{item.deviceId}
        </foreach>
    </update>

    <!-- 更新行政区划 -->
    <update id="updateRegion">
        UPDATE wvp_device_channel
        SET gb_civil_code = #{civilCode}
        WHERE id IN
        <foreach collection="channelList" item="item" open="(" separator="," close=")">
            #{item.gbId}
        </foreach>
    </update>

    <!-- 批量更新通道信息 (PostgreSQL 优化) -->
    <update id="batchUpdate">
        UPDATE wvp_device_channel
        SET
        update_time = CASE id
        <foreach collection="commonGBChannels" item="item">
            WHEN #{item.gbId} THEN #{item.updateTime}
        </foreach>
        END,
        gb_device_id = CASE id
        <foreach collection="commonGBChannels" item="item">
            WHEN #{item.gbId} THEN #{item.gbDeviceId}
        </foreach>
        END,
        gb_name = CASE id
        <foreach collection="commonGBChannels" item="item">
            WHEN #{item.gbId} THEN #{item.gbName}
        </foreach>
        END,
        <!-- 其他字段按相同模式处理 -->
        gb_status = CASE id
        <foreach collection="commonGBChannels" item="item">
            WHEN #{item.gbId} THEN #{item.gbStatus}
        </foreach>
        END
        WHERE id IN
        <foreach collection="commonGBChannels" item="item" open="(" separator="," close=")">
            #{item.gbId}
        </foreach>
    </update>

    <!-- 更新GPS信息 (PostgreSQL 优化) -->
    <update id="updateGpsByDeviceId">
        UPDATE wvp_device_channel
        SET
        gb_longitude = CASE gb_device_id
        <foreach collection="gpsMsgInfoList" item="item">
            WHEN #{item.id} THEN #{item.lng}
        </foreach>
        END,
        gb_latitude = CASE gb_device_id
        <foreach collection="gpsMsgInfoList" item="item">
            WHEN #{item.id} THEN #{item.lat}
        </foreach>
        END,
        gps_speed = CASE gb_device_id
        <foreach collection="gpsMsgInfoList" item="item">
            WHEN #{item.id} THEN #{item.speed}
        </foreach>
        END
        WHERE gb_device_id IN
        <foreach collection="gpsMsgInfoList" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </update>

    <!-- 查询录制计划关联的通道 (PostgreSQL 优化) -->
    <select id="queryForRecordPlanForWebList" resultMap="commonGBChannelMap">
        SELECT
        wdc.id,
        wdc.data_type,
        wdc.data_device_id,
        wdc.create_time,
        wdc.update_time,
        wdc.record_plan_id,
        COALESCE(wdc.gb_device_id, wdc.device_id) AS gb_device_id,
        COALESCE(wdc.gb_name, wdc.name) AS gb_name,
        COALESCE(wdc.gb_manufacturer, wdc.manufacturer) AS gb_manufacturer,
        <!-- 其他COALESCE字段... -->
        FROM wvp_device_channel wdc
        WHERE wdc.channel_type = 0
        <if test="query != null and query != ''">
            AND (
            COALESCE(wdc.gb_device_id, wdc.device_id) LIKE '%' || #{query} || '%' ESCAPE '/'
            OR COALESCE(wdc.gb_name, wdc.name) LIKE '%' || #{query} || '%' ESCAPE '/'
            )
        </if>
        <if test="online != null">
            AND COALESCE(wdc.gb_status, wdc.status) =
            <choose>
                <when test="online">'ON'</when>
                <otherwise>'OFF'</otherwise>
            </choose>
        </if>
        <if test="hasLink != null">
            <choose>
                <when test="hasLink">
                    AND wdc.record_plan_id = #{planId}
                </when>
                <otherwise>
                    AND (wdc.record_plan_id IS NULL OR wdc.record_plan_id != #{planId})
                </otherwise>
            </choose>
        </if>
        <if test="dataType != null">
            AND wdc.data_type = #{dataType}
        </if>
    </select>

    <!-- 移除录制计划 -->
    <update id="removeRecordPlan">
        UPDATE wvp_device_channel
        SET record_plan_id = NULL
        WHERE id IN
        <foreach collection="channelIds" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- 添加录制计划 -->
    <update id="addRecordPlan">
        UPDATE wvp_device_channel
        SET record_plan_id = #{planId}
        WHERE id IN
        <foreach collection="channelIds" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- 为所有通道添加录制计划 -->
    <update id="addRecordPlanForAll">
        UPDATE wvp_device_channel
        SET record_plan_id = #{planId}
    </update>

    <!-- 根据计划ID移除录制计划 -->
    <update id="removeRecordPlanByPlanId">
        UPDATE wvp_device_channel
        SET record_plan_id = NULL
        WHERE record_plan_id = #{planId}
    </update>

</mapper>