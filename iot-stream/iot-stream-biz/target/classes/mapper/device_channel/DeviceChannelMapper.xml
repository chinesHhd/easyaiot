<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basiclab.iot.stream.mapper.DeviceChannelMapper">

    <!-- 添加设备通道 (PostgreSQL) -->
    <insert id="add" parameterType="com.basiclab.iot.stream.bean.DeviceChannel"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO wvp_device_channel (
            device_id, data_type, data_device_id, name, manufacturer, model, owner,
            civil_code, block,
            address, parental, parent_id, safety_way, register_way, cert_num, certifiable,
            err_code, end_time, secrecy,
            ip_address, port, password, status, longitude, latitude, ptz_type,
            position_type, room_type, use_type,
            supply_light_type, direction_type, resolution, business_group_id,
            download_speed, svc_space_support_mod,
            svc_time_support_mode, create_time, update_time, sub_count, stream_id,
            has_audio, gps_time, stream_identification, channel_type
        ) VALUES (
                     #{deviceId}, #{dataType}, #{dataDeviceId}, #{name}, #{manufacturer}, #{model}, #{owner}, #{civilCode},
                     #{block},
                     #{address}, #{parental}, #{parentId}, #{safetyWay}, #{registerWay}, #{certNum}, #{certifiable},
                     #{errCode}, #{endTime}, #{secrecy},
                     #{ipAddress}, #{port}, #{password}, #{status}, #{longitude}, #{latitude}, #{ptzType}, #{positionType},
                     #{roomType}, #{useType},
                     #{supplyLightType}, #{directionType}, #{resolution}, #{businessGroupId}, #{downloadSpeed},
                     #{svcSpaceSupportMod},
                     #{svcTimeSupportMode}, #{createTime}, #{updateTime}, #{subCount}, #{streamId}, #{hasAudio}, #{gpsTime},
                     #{streamIdentification}, #{channelType}
                 )
    </insert>

    <!-- 更新设备通道 (PostgreSQL) -->
    <update id="update" parameterType="com.basiclab.iot.stream.bean.DeviceChannel">
        UPDATE wvp_device_channel
        SET
            update_time = #{updateTime},
            device_id = #{deviceId},
            data_type = #{dataType},
            data_device_id = #{dataDeviceId},
            name = #{name},
            manufacturer = #{manufacturer},
            model = #{model},
            owner = #{owner},
            civil_code = #{civilCode},
            block = #{block},
            address = #{address},
            parental = #{parental},
            parent_id = #{parentId},
            safety_way = #{safetyWay},
            register_way = #{registerWay},
            cert_num = #{certNum},
            certifiable = #{certifiable},
            err_code = #{errCode},
            end_time = #{endTime},
            secrecy = #{secrecy},
            ip_address = #{ipAddress},
            port = #{port},
            password = #{password},
            status = #{status},
            longitude = #{longitude},
            latitude = #{latitude},
            ptz_type = #{ptzType},
            position_type = #{positionType},
            room_type = #{roomType},
            use_type = #{useType},
            supply_light_type = #{supplyLightType},
            direction_type = #{directionType},
            resolution = #{resolution},
            business_group_id = #{businessGroupId},
            download_speed = #{downloadSpeed},
            svc_space_support_mod = #{svcSpaceSupportMod},
            svc_time_support_mode = #{svcTimeSupportMode},
            sub_count = #{subCount},
            stream_id = #{streamId},
            has_audio = #{hasAudio},
            gps_time = #{gpsTime},
            stream_identification = #{streamIdentification},
            channel_type = #{channelType}
        WHERE id = #{id}
    </update>

    <!-- 查询通道列表 (PostgreSQL) -->
    <select id="queryChannels" resultType="com.basiclab.iot.stream.bean.DeviceChannel">
        SELECT *
        FROM wvp_device_channel
        WHERE 1 = 1
        <if test="dataDeviceId != null">
            AND data_device_id = #{dataDeviceId}
        </if>
        <if test="civilCode != null and civilCode != ''">
            AND civil_code = #{civilCode}
        </if>
        <if test="businessGroupId != null and businessGroupId != ''">
            AND business_group_id = #{businessGroupId}
        </if>
        <if test="parentChannelId != null and parentChannelId != ''">
            AND parent_id = #{parentChannelId}
        </if>
        <if test="query != null and query != ''">
            AND (device_id LIKE '%' || #{query} || '%'
            OR name LIKE '%' || #{query} || '%')
        </if>
        <if test="hasSubChannel != null">
            <choose>
                <when test="hasSubChannel">
                    AND sub_count > 0
                </when>
                <otherwise>
                    AND sub_count = 0
                </otherwise>
            </choose>
        </if>
        <if test="online != null">
            AND status =
            <choose>
                <when test="online">'ON'</when>
                <otherwise>'OFF'</otherwise>
            </choose>
        </if>
        <if test="channelIds != null and channelIds.size() > 0">
            AND device_id IN
            <foreach collection="channelIds" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <!-- 根据设备ID查询通道 -->
    <select id="queryChannelsByDeviceDbId" resultType="com.basiclab.iot.stream.bean.DeviceChannel">
        SELECT *
        FROM wvp_device_channel
        WHERE data_device_id = #{dataDeviceId}
    </select>

    <!-- 查询通道ID列表 -->
    <select id="queryChaneIdListByDeviceDbIds" resultType="java.lang.Integer">
        SELECT id
        FROM wvp_device_channel
        WHERE data_type = 1
        AND data_device_id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 清理设备通道 -->
    <delete id="cleanChannelsByDeviceId">
        DELETE FROM wvp_device_channel
        WHERE data_type = 1
          AND data_device_id = #{dataDeviceId}
    </delete>

    <!-- 删除通道 -->
    <delete id="del">
        DELETE FROM wvp_device_channel
        WHERE id = #{id}
    </delete>

    <!-- 查询带设备信息的通道 (PostgreSQL) -->
    <select id="queryChannelsWithDeviceInfo" resultType="com.basiclab.iot.stream.web.dto.DeviceChannelExtend">
        SELECT
        dc.id,
        dc.create_time,
        dc.update_time,
        dc.sub_count,
        COALESCE(dc.gb_device_id, dc.device_id) AS channel_id,
        de.device_id AS device_id,
        COALESCE(dc.gb_name, dc.name) AS name,
        de.name AS device_name,
        de.on_line AS device_online,
        COALESCE(dc.gb_manufacturer, dc.manufacturer) AS manufacture,
        COALESCE(dc.gb_model, dc.model) AS model,
        COALESCE(dc.gb_owner, dc.owner) AS owner,
        COALESCE(dc.gb_civil_code, dc.civil_code) AS civil_code,
        COALESCE(dc.gb_block, dc.block) AS block,
        COALESCE(dc.gb_address, dc.address) AS address,
        COALESCE(dc.gb_parental, dc.parental) AS parental,
        COALESCE(dc.gb_parent_id, dc.parent_id) AS parent_id,
        COALESCE(dc.gb_safety_way, dc.safety_way) AS safety_way,
        COALESCE(dc.gb_register_way, dc.register_way) AS register_way,
        COALESCE(dc.gb_cert_num, dc.cert_num) AS cert_num,
        COALESCE(dc.gb_certifiable, dc.certifiable) AS certifiable,
        COALESCE(dc.gb_err_code, dc.err_code) AS err_code,
        COALESCE(dc.gb_end_time, dc.end_time) AS end_time,
        COALESCE(dc.gb_secrecy, dc.secrecy) AS secrecy,
        COALESCE(dc.gb_ip_address, dc.ip_address) AS ip_address,
        COALESCE(dc.gb_port, dc.port) AS port,
        COALESCE(dc.gb_password, dc.password) AS password,
        COALESCE(dc.gb_ptz_type, dc.ptz_type) AS ptz_type,
        COALESCE(dc.gb_status, dc.status) AS status,
        COALESCE(dc.gb_longitude, dc.longitude) AS longitude,
        COALESCE(dc.gb_latitude, dc.latitude) AS latitude,
        COALESCE(dc.gb_business_group_id, dc.business_group_id) AS business_group_id
        FROM wvp_device_channel dc
        LEFT JOIN wvp_device de ON dc.data_device_id = de.id
        WHERE dc.data_type = 1
        <if test="deviceId != null and deviceId != ''">
            AND de.device_id = #{deviceId}
        </if>
        <if test="query != null and query != ''">
            AND (dc.device_id LIKE '%' || #{query} || '%'
            OR dc.name LIKE '%' || #{query} || '%')
        </if>
        <if test="parentChannelId != null and parentChannelId != ''">
            AND dc.parent_id = #{parentChannelId}
        </if>
        <if test="online != null">
            AND dc.status =
            <choose>
                <when test="online">'ON'</when>
                <otherwise>'OFF'</otherwise>
            </choose>
        </if>
        <if test="hasSubChannel != null">
            <choose>
                <when test="hasSubChannel">
                    AND dc.sub_count > 0
                </when>
                <otherwise>
                    AND dc.sub_count = 0
                </otherwise>
            </choose>
        </if>
        <if test="channelIds != null and channelIds.size() > 0">
            AND dc.device_id IN
            <foreach collection="channelIds" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        ORDER BY dc.device_id ASC
    </select>

    <!-- 开始播放 -->
    <update id="startPlay">
        UPDATE wvp_device_channel
        SET stream_id = #{streamId}
        WHERE id = #{channelId}
    </update>

    <!-- 查询通道列表 (PostgreSQL) -->
    <select id="queryChannelListInAll" resultType="com.basiclab.iot.stream.controller.bean.ChannelReduce">
        SELECT
        dc.id,
        COALESCE(dc.gb_device_id, dc.device_id) AS name,
        COALESCE(dc.gb_name, dc.name) AS name,
        COALESCE(dc.gb_manufacturer, dc.manufacturer) AS manufacturer,
        COALESCE(dc.gb_ip_address, dc.ip_address) AS ip_address,
        dc.sub_count,
        pgc.platform_id AS platform_id,
        pgc.catalog_id AS catalog_id
        FROM wvp_device_channel dc
        LEFT JOIN wvp_device de ON dc.data_device_id = de.id
        LEFT JOIN wvp_platform_channel pgc ON pgc.device_channel_id = dc.id
        WHERE dc.data_type = 1
        <if test="query != null and query != ''">
            AND (
            COALESCE(dc.gb_device_id, dc.device_id) LIKE '%' || #{query} || '%'
            OR COALESCE(dc.gb_name, dc.name) LIKE '%' || #{query} || '%'
            )
        </if>
        <if test="online != null">
            AND dc.status =
            <choose>
                <when test="online">'ON'</when>
                <otherwise>'OFF'</otherwise>
            </choose>
        </if>
        <if test="hasSubChannel != null">
            <choose>
                <when test="hasSubChannel">
                    AND dc.sub_count > 0
                </when>
                <otherwise>
                    AND dc.sub_count = 0
                </otherwise>
            </choose>
        </if>
        <if test="catalogId == null">
            AND dc.id NOT IN (
            SELECT device_channel_id
            FROM wvp_platform_channel
            WHERE platform_id = #{platformId}
            )
        </if>
        <if test="catalogId != null">
            AND pgc.platform_id = #{platformId}
            AND pgc.catalog_id = #{catalogId}
        </if>
        ORDER BY COALESCE(dc.gb_device_id, dc.device_id) ASC
    </select>

    <!-- 离线通道 -->
    <update id="offline">
        UPDATE wvp_device_channel
        SET status = 'OFF'
        WHERE id = #{id}
    </update>

    <!-- 批量添加通道 (PostgreSQL) -->
    <insert id="batchAdd" parameterType="java.util.List">
        INSERT INTO wvp_device_channel (
        device_id, data_type, data_device_id, name, manufacturer, model, owner, civil_code, block,
        address, parental, parent_id, safety_way, register_way, cert_num, certifiable, err_code, end_time, secrecy,
        ip_address, port, password, status, longitude, latitude, ptz_type, position_type, room_type, use_type,
        supply_light_type, direction_type, resolution, business_group_id, download_speed, svc_space_support_mod,
        svc_time_support_mode, create_time, update_time, sub_count, stream_id, has_audio, gps_time, stream_identification, channel_type
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.deviceId}, #{item.dataType}, #{item.dataDeviceId}, #{item.name}, #{item.manufacturer}, #{item.model}, #{item.owner}, #{item.civilCode}, #{item.block},
            #{item.address}, #{item.parental}, #{item.parentId}, #{item.safetyWay}, #{item.registerWay}, #{item.certNum}, #{item.certifiable}, #{item.errCode}, #{item.endTime}, #{item.secrecy},
            #{item.ipAddress}, #{item.port}, #{item.password}, #{item.status}, #{item.longitude}, #{item.latitude}, #{item.ptzType}, #{item.positionType}, #{item.roomType}, #{item.useType},
            #{item.supplyLightType}, #{item.directionType}, #{item.resolution}, #{item.businessGroupId}, #{item.downloadSpeed}, #{item.svcSpaceSupportMod},
            #{item.svcTimeSupportMode}, #{item.createTime}, #{item.updateTime}, #{item.subCount}, #{item.streamId}, #{item.hasAudio}, #{item.gpsTime}, #{item.streamIdentification}, #{item.channelType}
            )
        </foreach>
    </insert>

    <!-- 在线通道 -->
    <update id="online">
        UPDATE wvp_device_channel
        SET status = 'ON'
        WHERE id = #{id}
    </update>

    <!-- 批量更新通道 (PostgreSQL优化) -->
    <update id="batchUpdate" parameterType="java.util.List">
        UPDATE wvp_device_channel
        SET
        update_time = CASE id
        <foreach collection="list" item="item">
            WHEN #{item.id} THEN #{item.updateTime}
        </foreach>
        END,
        device_id = CASE id
        <foreach collection="list" item="item">
            WHEN #{item.id} THEN #{item.deviceId}
        </foreach>
        END,
        <!-- 其他字段按相同模式处理 -->
        status = CASE id
        <foreach collection="list" item="item">
            WHEN #{item.id} THEN #{item.status}
        </foreach>
        END
        WHERE id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </update>

    <!-- 批量更新通道（通知方式） (PostgreSQL优化) -->
    <update id="batchUpdateForNotify" parameterType="java.util.List">
        UPDATE wvp_device_channel
        SET
        update_time = CASE
        <foreach collection="list" item="item">
            WHEN (data_type = #{item.dataType} AND data_device_id = #{item.dataDeviceId} AND device_id = #{item.deviceId})
            THEN #{item.updateTime}
        </foreach>
        END,
        device_id = CASE
        <foreach collection="list" item="item">
            WHEN (data_type = #{item.dataType} AND data_device_id = #{item.dataDeviceId} AND device_id = #{item.deviceId})
            THEN #{item.deviceId}
        </foreach>
        END,
        <!-- 其他字段按相同模式处理 -->
        status = CASE
        <foreach collection="list" item="item">
            WHEN (data_type = #{item.dataType} AND data_device_id = #{item.dataDeviceId} AND device_id = #{item.deviceId})
            THEN #{item.status}
        </foreach>
        END
        WHERE (data_type, data_device_id, device_id) IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            (#{item.dataType}, #{item.dataDeviceId}, #{item.deviceId})
        </foreach>
    </update>

    <!-- 更新通道子通道数 -->
    <update id="updateChannelSubCount">
        UPDATE wvp_device_channel
        SET sub_count = (
            SELECT COUNT(1)
            FROM wvp_device_channel
            WHERE data_type = 1
              AND data_device_id = #{dataDeviceId}
              AND parent_id = #{channelId}
        )
        WHERE data_type = 1
          AND data_device_id = #{dataDeviceId}
          AND device_id = #{channelId}
    </update>

    <!-- 更新通道位置 -->
    <update id="updatePosition">
        UPDATE wvp_device_channel
        SET
            latitude = #{latitude},
            longitude = #{longitude},
            gps_time = #{gpsTime}
        WHERE id = #{id}
    </update>

    <!-- 查询设备所有通道 -->
    <select id="queryAllChannelsForRefresh" resultType="com.basiclab.iot.stream.bean.DeviceChannel">
        SELECT *
        FROM wvp_device_channel
        WHERE data_type = 1
          AND data_device_id = #{dataDeviceId}
    </select>

    <!-- 通过通道ID获取设备 -->
    <select id="getDeviceByChannelDeviceId" resultType="com.basiclab.iot.stream.bean.Device">
        SELECT de.*
        FROM wvp_device de
                 JOIN wvp_device_channel dc ON de.device_id = dc.device_id
        WHERE dc.data_type = 1
          AND dc.device_id = #{channelId}
    </select>

    <!-- 批量删除通道 (PostgreSQL优化) -->
    <delete id="batchDel">
        DELETE FROM wvp_device_channel
        WHERE id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </delete>

    <!-- 批量更新通道状态 (PostgreSQL优化) -->
    <update id="batchUpdateStatus">
        UPDATE wvp_device_channel
        SET status = CASE
        <foreach collection="list" item="item">
            WHEN (data_type = #{item.dataType} AND device_id = #{item.deviceId})
            THEN #{item.status}
        </foreach>
        END
        WHERE (data_type, device_id) IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            (#{item.dataType}, #{item.deviceId})
        </foreach>
    </update>

    <!-- 获取在线通道数 -->
    <select id="getOnlineCount" resultType="int">
        SELECT COUNT(1)
        FROM wvp_device_channel
        WHERE status = 'ON'
    </select>

    <!-- 获取所有通道数 -->
    <select id="getAllChannelCount" resultType="int">
        SELECT COUNT(1)
        FROM wvp_device_channel
    </select>

    <!-- 更新通道流标识 -->
    <update id="updateChannelStreamIdentification">
        UPDATE wvp_device_channel
        SET stream_identification = #{streamIdentification}
        WHERE id = #{id}
    </update>

    <!-- 更新所有通道流标识 -->
    <update id="updateAllChannelStreamIdentification">
        UPDATE wvp_device_channel
        SET stream_identification = #{streamIdentification}
    </update>

    <!-- 批量更新通道位置 (PostgreSQL优化) -->
    <update id="batchUpdatePosition">
        UPDATE wvp_device_channel
        SET
        update_time = CASE id
        <foreach collection="list" item="item">
            <if test="item.id > 0">
                WHEN #{item.id} THEN #{item.updateTime}
            </if>
        </foreach>
        END,
        longitude = CASE id
        <foreach collection="list" item="item">
            <if test="item.id > 0 and item.longitude != null">
                WHEN #{item.id} THEN #{item.longitude}
            </if>
        </foreach>
        END,
        latitude = CASE id
        <foreach collection="list" item="item">
            <if test="item.id > 0 and item.latitude != null">
                WHEN #{item.id} THEN #{item.latitude}
            </if>
        </foreach>
        END,
        gps_time = CASE id
        <foreach collection="list" item="item">
            <if test="item.id > 0 and item.gpsTime != null">
                WHEN #{item.id} THEN #{item.gpsTime}
            </if>
        </foreach>
        END
        WHERE id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            <if test="item.id > 0">
                #{item.id}
            </if>
        </foreach>
    </update>

    <!-- 获取单个通道 -->
    <select id="getOne" resultType="com.basiclab.iot.stream.bean.DeviceChannel">
        SELECT *
        FROM wvp_device_channel
        WHERE id = #{id}
    </select>

    <!-- 获取单个通道（详细） -->
    <select id="getOneForSource" resultType="com.basiclab.iot.stream.bean.DeviceChannel">
        SELECT *
        FROM wvp_device_channel
        WHERE id = #{id}
    </select>

    <!-- 通过设备ID和通道ID获取通道 -->
    <select id="getOneByDeviceId" resultType="com.basiclab.iot.stream.bean.DeviceChannel">
        SELECT *
        FROM wvp_device_channel
        WHERE data_device_id = #{dataDeviceId}
          AND device_id = #{channelId}
    </select>

    <!-- 通过设备ID和通道ID获取通道（详细） -->
    <select id="getOneByDeviceIdForSource" resultType="com.basiclab.iot.stream.bean.DeviceChannel">
        SELECT *
        FROM wvp_device_channel
        WHERE data_type = 1
          AND data_device_id = #{dataDeviceId}
          AND COALESCE(gb_device_id, device_id) = #{channelId}
    </select>

    <!-- 停止播放 -->
    <update id="stopPlayById">
        UPDATE wvp_device_channel
        SET stream_id = NULL
        WHERE id = #{channelId}
    </update>

    <!-- 更改音频状态 -->
    <update id="changeAudio">
        UPDATE wvp_device_channel
        SET has_audio = #{audio}
        WHERE id = #{channelId}
    </update>

    <!-- 更新流GPS (PostgreSQL优化) -->
    <update id="updateStreamGPS">
        UPDATE wvp_device_channel
        SET
        gb_longitude = CASE id
        <foreach collection="list" item="item">
            WHEN #{item.channelId} THEN #{item.lng}
        </foreach>
        END,
        gb_latitude = CASE id
        <foreach collection="list" item="item">
            WHEN #{item.channelId} THEN #{item.lat}
        </foreach>
        END
        WHERE id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.channelId}
        </foreach>
    </update>

    <!-- 更新通道状态 -->
    <update id="updateStatus">
        UPDATE wvp_device_channel
        SET status = #{status}
        WHERE data_type = #{dataType}
          AND data_device_id = #{dataDeviceId}
          AND device_id = #{deviceId}
    </update>

    <!-- 更新通道（通知方式） -->
    <update id="updateChannelForNotify" parameterType="com.basiclab.iot.stream.bean.DeviceChannel">
        UPDATE wvp_device_channel
        SET update_time           = #{updateTime},
            device_id             = #{deviceId},
            data_device_id        = #{dataDeviceId},
            name                  = #{name},
            manufacturer          = #{manufacturer},
            model                 = #{model},
            owner                 = #{owner},
            civil_code            = #{civilCode},
            block                 = #{block},
            address               = #{address},
            parental              = #{parental},
            parent_id             = #{parentId},
            safety_way            = #{safetyWay},
            register_way          = #{registerWay},
            cert_num              = #{certNum},
            certifiable           = #{certifiable},
            err_code              = #{errCode},
            end_time              = #{endTime},
            secrecy               = #{secrecy},
            ip_address            = #{ipAddress},
            port                  = #{port},
            password              = #{password},
            status                = #{status},
            longitude             = #{longitude},
            latitude              = #{latitude},
            ptz_type              = #{ptzType},
            position_type         = #{positionType},
            room_type             = #{roomType},
            use_type              = #{useType},
            supply_light_type     = #{supplyLightType},
            direction_type        = #{directionType},
            resolution            = #{resolution},
            business_group_id     = #{businessGroupId},
            download_speed        = #{downloadSpeed},
            svc_space_support_mod = #{svcSpaceSupportMod},
            svc_time_support_mode = #{svcTimeSupportMode},
            sub_count             = #{subCount},
            stream_id             = #{streamId},
            has_audio             = #{hasAudio},
            gps_time              = #{gpsTime},
            stream_identification = #{streamIdentification},
            channel_type          = #{channelType}
        WHERE id = #{id}
    </update>

    <!-- 通过源通道ID获取通道 -->
    <select id="getOneBySourceChannelId" resultType="com.basiclab.iot.stream.bean.DeviceChannel">
        SELECT *
        FROM wvp_device_channel
        WHERE data_type = 1
          AND data_device_id = #{dataDeviceId}
          AND device_id = #{channelId}
    </select>

    <!-- 设备离线 -->
    <update id="offlineByDeviceId">
        UPDATE wvp_device_channel
        SET status = 'OFF'
        WHERE data_type = 1
          AND data_device_id = #{deviceId}
    </update>

</mapper>