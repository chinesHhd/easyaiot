<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basiclab.iot.stream.mapper.UserApiKeyMapper">

    <!-- 添加API密钥 -->
    <insert id="add" parameterType="com.basiclab.iot.stream.storager.dto.UserApiKey"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            SELECT currval('wvp_user_api_key_id_seq')
        </selectKey>
        INSERT INTO wvp_user_api_key (
        user_id, app, api_key, expired_at, remark, enable,
        create_time, update_time
        ) VALUES (
        #{userId}, #{app}, #{apiKey}, #{expiredAt}, #{remark}, #{enable},
        #{createTime}, #{updateTime}
        )
    </insert>

    <!-- 更新API密钥信息 -->
    <update id="update" parameterType="com.basiclab.iot.stream.storager.dto.UserApiKey">
        UPDATE wvp_user_api_key
        <set>
            update_time = #{updateTime},
            <if test="app != null">app = #{app},</if>
            <if test="apiKey != null">api_key = #{apiKey},</if>
            <if test="expiredAt != null">expired_at = #{expiredAt},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="enable != null">enable = #{enable},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 启用API密钥 -->
    <update id="enable">
        UPDATE wvp_user_api_key
        SET enable = true
        WHERE id = #{id}
    </update>

    <!-- 禁用API密钥 -->
    <update id="disable">
        UPDATE wvp_user_api_key
        SET enable = false
        WHERE id = #{id}
    </update>

    <!-- 更新API密钥值 -->
    <update id="apiKey">
        UPDATE wvp_user_api_key
        SET api_key = #{apiKey}
        WHERE id = #{id}
    </update>

    <!-- 更新备注 -->
    <update id="remark">
        UPDATE wvp_user_api_key
        SET remark = #{remark}
        WHERE id = #{id}
    </update>

    <!-- 删除API密钥 -->
    <delete id="delete">
        DELETE
        FROM wvp_user_api_key
        WHERE id = #{id}
    </delete>

    <!-- 根据ID查询API密钥（带用户名） -->
    <select id="selectById" resultType="com.basiclab.iot.stream.storager.dto.UserApiKey">
        SELECT uak.id,
               uak.user_id,
               uak.app,
               uak.api_key,
               uak.expired_at,
               uak.remark,
               uak.enable,
               uak.create_time,
               uak.update_time,
               u.username AS username
        FROM wvp_user_api_key uak
                 LEFT JOIN wvp_user u ON u.id = uak.user_id
        WHERE uak.id = #{id}
    </select>

    <!-- 根据API密钥查询 -->
    <select id="selectByApiKey" resultType="com.basiclab.iot.stream.storager.dto.UserApiKey">
        SELECT uak.id,
               uak.user_id,
               uak.app,
               uak.api_key,
               uak.expired_at,
               uak.remark,
               uak.enable,
               uak.create_time,
               uak.update_time,
               u.username AS username
        FROM wvp_user_api_key uak
                 LEFT JOIN wvp_user u ON u.id = uak.user_id
        WHERE uak.api_key = #{apiKey}
    </select>

    <!-- 查询所有API密钥（带用户名） -->
    <select id="selectAll" resultType="com.basiclab.iot.stream.storager.dto.UserApiKey">
        SELECT uak.id,
               uak.user_id,
               uak.app,
               uak.api_key,
               uak.expired_at,
               uak.remark,
               uak.enable,
               uak.create_time,
               uak.update_time,
               u.username AS username
        FROM wvp_user_api_key uak
                 LEFT JOIN wvp_user u ON u.id = uak.user_id
    </select>

    <!-- 查询用户所有API密钥（带用户名） -->
    <select id="getUserApiKeys" resultType="com.basiclab.iot.stream.storager.dto.UserApiKey">
        SELECT uak.id,
               uak.user_id,
               uak.app,
               uak.api_key,
               uak.expired_at,
               uak.remark,
               uak.enable,
               uak.create_time,
               uak.update_time,
               u.username AS username
        FROM wvp_user_api_key uak
                 LEFT JOIN wvp_user u ON u.id = uak.user_id
    </select>

    <!-- 检查API密钥是否存在 -->
    <select id="isApiKeyExists" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM wvp_user_api_key
        WHERE api_key = #{apiKey}
    </select>

</mapper>