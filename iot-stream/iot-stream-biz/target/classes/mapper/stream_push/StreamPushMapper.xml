<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basiclab.iot.stream.mapper.StreamPushMapper">

    <!-- 添加推流 -->
    <insert id="add" parameterType="com.basiclab.iot.stream.streamPush.bean.StreamPush"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO wvp_stream_push (app, stream, media_server_id, server_id, push_time,
                                     update_time, create_time, pushing, start_offline_push)
        VALUES (#{app}, #{stream}, #{mediaServerId}, #{serverId}, #{pushTime},
                #{updateTime}, #{createTime}, #{pushing}, #{startOfflinePush})
    </insert>

    <!-- 更新推流 -->
    <update id="update" parameterType="com.basiclab.iot.stream.streamPush.bean.StreamPush">
        UPDATE wvp_stream_push
        <set>
            update_time = #{updateTime},
            <if test="app != null">app = #{app},</if>
            <if test="stream != null">stream = #{stream},</if>
            <if test="mediaServerId != null">media_server_id = #{mediaServerId},</if>
            <if test="serverId != null">server_id = #{serverId},</if>
            <if test="pushTime != null">push_time = #{pushTime},</if>
            <if test="pushing != null">pushing = #{pushing},</if>
            <if test="startOfflinePush != null">start_offline_push = #{startOfflinePush},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 删除推流 -->
    <delete id="del">
        DELETE
        FROM wvp_stream_push
        WHERE id = #{id}
    </delete>

    <!-- 查询所有推流（带关联通道信息） -->
    <select id="selectAll" resultType="com.basiclab.iot.stream.streamPush.bean.StreamPush">
        SELECT
        st.*,
        st.id AS data_device_id,
        wdc.*,
        wdc.id AS gb_id
        FROM wvp_stream_push st
        LEFT JOIN wvp_device_channel wdc
        ON wdc.data_type = 2 AND st.id = wdc.data_device_id
        WHERE 1 = 1
        <if test="query != null and query != ''">
            AND (
            st.app LIKE CONCAT('%', #{query}, '%') ESCAPE '/'
            OR st.stream LIKE CONCAT('%', #{query}, '%') ESCAPE '/'
            OR wdc.gb_device_id LIKE CONCAT('%', #{query}, '%') ESCAPE '/'
            OR wdc.gb_name LIKE CONCAT('%', #{query}, '%') ESCAPE '/'
            )
        </if>
        <if test="pushing != null">
            AND st.pushing = #{pushing}
        </if>
        <if test="mediaServerId != null and mediaServerId != ''">
            AND st.media_server_id = #{mediaServerId}
        </if>
        ORDER BY st.create_time DESC
    </select>

    <!-- 根据应用和流查询 -->
    <select id="selectByAppAndStream" resultType="com.basiclab.iot.stream.streamPush.bean.StreamPush">
        SELECT st.*,
               st.id  AS data_device_id,
               wdc.*,
               wdc.id AS gb_id
        FROM wvp_stream_push st
                 LEFT JOIN wvp_device_channel wdc
                           ON wdc.data_type = 2 AND st.id = wdc.data_device_id
        WHERE st.app = #{app}
          AND st.stream = #{stream}
    </select>

    <!-- 批量添加推流 -->
    <insert id="addAll" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO wvp_stream_push (
        app, stream, media_server_id, server_id, push_time,
        update_time, create_time, pushing, start_offline_push
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.app}, #{item.stream}, #{item.mediaServerId}, #{item.serverId},
            #{item.pushTime}, #{item.updateTime}, #{item.createTime},
            #{item.pushing}, #{item.startOfflinePush}
            )
        </foreach>
    </insert>

    <!-- 根据媒体服务器ID查询 -->
    <select id="selectAllByMediaServerId" resultType="com.basiclab.iot.stream.streamPush.bean.StreamPush">
        SELECT st.*,
               st.id  AS data_device_id,
               wdc.*,
               wdc.id AS gb_id
        FROM wvp_stream_push st
                 LEFT JOIN wvp_device_channel wdc
                           ON wdc.data_type = 2 AND st.id = wdc.data_device_id
        WHERE st.media_server_id = #{mediaServerId}
    </select>

    <!-- 根据媒体服务器ID查询（无GB ID） -->
    <select id="selectAllByMediaServerIdWithOutGbID" resultType="com.basiclab.iot.stream.streamPush.bean.StreamPush">
        SELECT st.*,
               st.id  AS data_device_id,
               wdc.*,
               wdc.id AS gb_id
        FROM wvp_stream_push st
                 LEFT JOIN wvp_device_channel wdc
                           ON wdc.data_type = 2 AND st.id = wdc.data_device_id
        WHERE st.media_server_id = #{mediaServerId}
          AND wdc.gb_device_id IS NULL
    </select>

    <!-- 更新推流状态 -->
    <update id="updatePushStatus" parameterType="com.basiclab.iot.stream.streamPush.bean.StreamPush">
        UPDATE wvp_stream_push
        SET pushing         = #{pushing},
            server_id       = #{serverId},
            media_server_id = #{mediaServerId}
        WHERE id = #{id}
    </update>

    <!-- 查询离线流列表 -->
    <select id="getListInList" resultType="com.basiclab.iot.stream.streamPush.bean.StreamPush">
        SELECT
        st.*,
        st.id AS data_device_id,
        wdc.*,
        wdc.id AS gb_id
        FROM wvp_stream_push st
        LEFT JOIN wvp_device_channel wdc
        ON wdc.data_type = 2 AND st.id = wdc.data_device_id
        WHERE (st.app, st.stream) IN
        <foreach collection="offlineStreams" item="item" open="(" separator="," close=")">
            (#{item.app}, #{item.stream})
        </foreach>
    </select>

    <!-- 获取所有应用和流组合 -->
    <select id="getAllAppAndStream" resultType="java.lang.String">
        SELECT CONCAT(app, stream)
        FROM wvp_stream_push
    </select>

    <!-- 获取总数 -->
    <select id="getAllCount" resultType="int">
        SELECT COUNT(1)
        FROM wvp_stream_push
    </select>

    <!-- 获取推送中的数量 -->
    <select id="getAllPushing" resultType="int">
        SELECT COUNT(1)
        FROM wvp_stream_push
        WHERE pushing = true
    </select>

    <!-- 获取应用和流映射 -->
    <select id="getAllAppAndStreamMap" resultType="map">
        SELECT CONCAT(wsp.app, wsp.stream) AS unique_key,
               wsp.*,
               wdc.id                      AS gb_id
        FROM wvp_stream_push wsp
                 LEFT JOIN wvp_device_channel wdc
                           ON wdc.data_type = 2 AND wsp.id = wdc.data_device_id
    </select>

    <!-- 获取GB ID映射 -->
    <select id="getAllGBId" resultType="map">
        SELECT wdc.gb_device_id,
               wsp.id AS data_device_id,
               wsp.*,
               wdc.id AS gb_id
        FROM wvp_stream_push wsp
                 LEFT JOIN wvp_device_channel wdc
                           ON wdc.data_type = 2 AND wsp.id = wdc.data_device_id
    </select>

    <!-- 根据ID查询 -->
    <select id="queryOne" resultType="com.basiclab.iot.stream.streamPush.bean.StreamPush">
        SELECT st.*,
               st.id  AS data_device_id,
               wdc.*,
               wdc.id AS gb_id
        FROM wvp_stream_push st
                 LEFT JOIN wvp_device_channel wdc
                           ON wdc.data_type = 2 AND st.id = wdc.data_device_id
        WHERE st.id = #{id}
    </select>

    <!-- 根据ID集合查询 -->
    <select id="selectInSet" resultType="com.basiclab.iot.stream.streamPush.bean.StreamPush">
        SELECT
        st.*,
        st.id AS data_device_id,
        wdc.*,
        wdc.id AS gb_id
        FROM wvp_stream_push st
        LEFT JOIN wvp_device_channel wdc
        ON wdc.data_type = 2 AND st.id = wdc.data_device_id
        WHERE st.id IN
        <foreach collection="ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 批量删除 -->
    <delete id="batchDel">
        DELETE FROM wvp_stream_push
        WHERE id IN
        <foreach collection="streamPushList" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </delete>

    <!-- 批量更新 -->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";">
            UPDATE wvp_stream_push
            <set>
                update_time = #{item.updateTime},
                app = #{item.app},
                stream = #{item.stream},
                media_server_id = #{item.mediaServerId},
                server_id = #{item.serverId},
                push_time = #{item.pushTime},
                pushing = #{item.pushing},
                start_offline_push = #{item.startOfflinePush}
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>

</mapper>