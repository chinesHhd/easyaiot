<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basiclab.iot.rule.mapper.RuleMapper">
  <resultMap id="BaseResultMap" type="com.basiclab.iot.rule.domain.Rule">
    <!--@mbg.generated-->
    <!--@Table "rule"-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="rule_identification" jdbcType="VARCHAR" property="ruleIdentification" />
    <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
    <result column="job_identification" jdbcType="VARCHAR" property="jobIdentification" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="condition_type" jdbcType="SMALLINT" property="conditionType" />
    <result column="concurrent" jdbcType="VARCHAR" property="concurrent" />
    <result column="misfire_policy" jdbcType="VARCHAR" property="misfirePolicy" />
    <result column="cron_expression" jdbcType="VARCHAR" property="cronExpression" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, app_id, rule_identification, rule_name, job_identification, "status", condition_type,
    concurrent, misfire_policy, cron_expression,
    remark, create_by, create_time, update_by, update_time
  </sql>
  <sql id="OrderByCreateTimeDesc">
    order by update_time desc
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from "rule"
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from "rule"
    where id = #{id,jdbcType=BIGINT}
  </delete>
<!--  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.basiclab.iot.rule.domain.Rule" useGeneratedKeys="true">-->
<!--    &lt;!&ndash;@mbg.generated&ndash;&gt;-->
<!--    insert into "rule"-->
<!--    <trim prefix="(" suffix=")" suffixOverrides=",">-->
<!--      <if test="appId != null and appId != ''">app_id,</if>-->
<!--      <if test="ruleName != null and ruleName != ''">rule_name,</if>-->
<!--      <if test="ruleIdentification != null">rule_identification,</if>-->
<!--      <if test="jobIdentification != null">job_identification,</if>-->
<!--      <if test="conditionType != null">condition_type,</if>-->
<!--      <if test="concurrent != null">concurrent,</if>-->
<!--      <if test="misfirePolicy != null">misfire_policy,</if>-->
<!--      <if test="cronExpression != null">cron_expression,</if>-->
<!--      <if test="status != null and status != ''">status,</if>-->
<!--      <if test="remark != null">remark,</if>-->
<!--      <if test="createBy != null">create_by,</if>-->
<!--      <if test="createTime != null">create_time,</if>-->
<!--      <if test="updateBy != null">update_by,</if>-->
<!--      <if test="updateTime != null">update_time,</if>-->
<!--    </trim>-->
<!--    <trim prefix="values (" suffix=")" suffixOverrides=",">-->
<!--      <if test="appId != null and appId != ''">#{appId},</if>-->
<!--      <if test="ruleName != null and ruleName != ''">#{ruleName},</if>-->
<!--      <if test="ruleIdentification != null">#{ruleIdentification},</if>-->
<!--      <if test="jobIdentification != null">#{jobIdentification},</if>-->
<!--      <if test="conditionType != null">#{conditionType},</if>-->
<!--      <if test="concurrent != null">#{concurrent},</if>-->
<!--      <if test="misfirePolicy != null">#{misfirePolicy},</if>-->
<!--      <if test="cronExpression != null">#{cronExpression},</if>-->
<!--      <if test="status != null and status != ''">#{status},</if>-->
<!--      <if test="remark != null">#{remark},</if>-->
<!--      <if test="createBy != null">#{createBy},</if>-->
<!--      <if test="createTime != null">#{createTime},</if>-->
<!--      <if test="updateBy != null">#{updateBy},</if>-->
<!--      <if test="updateTime != null">#{updateTime},</if>-->
<!--    </trim>-->
<!--  </insert>-->
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.basiclab.iot.rule.domain.Rule" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into "rule"
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        app_id,
      </if>
      <if test="ruleIdentification != null">
        rule_identification,
      </if>
      <if test="ruleName != null">
        rule_name,
      </if>
      <if test="jobIdentification != null">
        job_identification,
      </if>
      <if test="status != null">
        "status",
      </if>
      <if test="conditionType != null">
        condition_type,
      </if>
      <if test="concurrent != null">
        concurrent,
      </if>
      <if test="misfirePolicy != null">
        misfire_policy,
      </if>
      <if test="cronExpression != null">
        cron_expression,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="ruleIdentification != null">
        #{ruleIdentification,jdbcType=VARCHAR},
      </if>
      <if test="ruleName != null">
        #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="jobIdentification != null">
        #{jobIdentification,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="conditionIype != null">
        #{conditionType,jdbcType=SMALLINT},
      </if>
      <if test="concurrent != null">
        #{concurrent,jdbcType=VARCHAR},
      </if>
      <if test="misfirePolicy != null">
        #{misfirePolicy,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null">
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.basiclab.iot.rule.domain.Rule">
    <!--@mbg.generated-->
    update "rule"
    <set>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="ruleIdentification != null">
        rule_identification = #{ruleIdentification,jdbcType=VARCHAR},
      </if>
      <if test="ruleName != null">
        rule_name = #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="jobIdentification != null">
        job_identification = #{jobIdentification,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="conditionType != null">
        condition_type = #{conditionType,jdbcType=SMALLINT},
      </if>
      <if test="concurrent != null">
        concurrent = #{concurrent,jdbcType=VARCHAR},
      </if>
      <if test="misfirePolicy != null">
        misfire_policy = #{misfirePolicy,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null">
        cron_expression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.basiclab.iot.rule.domain.Rule">
    <!--@mbg.generated-->
    update "rule"
    set app_id = #{appId,jdbcType=VARCHAR},
      rule_identification = #{ruleIdentification,jdbcType=VARCHAR},
      rule_name = #{ruleName,jdbcType=VARCHAR},
      job_identification = #{jobIdentification,jdbcType=VARCHAR},
      "status" = #{status,jdbcType=VARCHAR},
      condition_type = #{conditionType,jdbcType=SMALLINT},
      concurrent = #{concurrent,jdbcType=VARCHAR},
      misfire_policy = #{misfirePolicy,jdbcType=VARCHAR},
      cron_expression = #{cronExpression,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update "rule"
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="app_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.appId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="rule_identification = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.ruleIdentification,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="rule_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.ruleName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="job_identification = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.jobIdentification,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="'status' = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="cron_expression = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.cronExpression,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="condition_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.conditionType,jdbcType=SMALLINT}
        </foreach>
      </trim>
      <trim prefix="concurrent = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.concurrent,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="misfire_policy = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.misfirePolicy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="remark = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.remark,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update "rule"
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="app_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.appId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.appId,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="rule_identification = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.ruleIdentification != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.ruleIdentification,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="rule_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.ruleName != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.ruleName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="job_identification = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.jobIdentification != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.jobIdentification,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="'status' = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.status != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="condition_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.conditionType != null">
          when id = #{item.id,jdbcType=BIGINT} then #{item.conditionType,jdbcType=SMALLINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="concurrent = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.concurrent != null">
          when id = #{item.id,jdbcType=BIGINT} then #{item.concurrent,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="misfire_policy = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.misfirePolicy != null">
          when id = #{item.id,jdbcType=BIGINT} then #{item.misfirePolicy,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="cron_expression = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.cronExpression != null">
          when id = #{item.id,jdbcType=BIGINT} then #{item.cronExpression,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="remark = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.remark != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.remark,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createBy != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createBy,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateBy != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateBy,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into "rule"
    (app_id, rule_identification, rule_name, job_identification, "status", condition_type,
    concurrent, misfire_policy, cron_expression,
    remark, create_by, create_time, update_by, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.appId,jdbcType=VARCHAR}, #{item.ruleIdentification,jdbcType=VARCHAR}, #{item.ruleName,jdbcType=VARCHAR}, 
        #{item.jobIdentification,jdbcType=VARCHAR}, #{item.status,jdbcType=VARCHAR}, #{conditionType,jdbcType=SMALLINT},
        #{concurrent,jdbcType=VARCHAR}, #{misfirePolicy,jdbcType=VARCHAR}, #{cronExpression,jdbcType=VARCHAR},
        #{item.remark,jdbcType=VARCHAR}, #{item.createBy,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateBy,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.basiclab.iot.rule.domain.Rule" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into "rule"
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      app_id,
      rule_identification,
      rule_name,
      job_identification,
      "status",
      condition_type,
      concurrent,
      misfire_policy,
      cron_expression,
      remark,
      create_by,
      create_time,
      update_by,
      update_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{appId,jdbcType=VARCHAR},
      #{ruleIdentification,jdbcType=VARCHAR},
      #{ruleName,jdbcType=VARCHAR},
      #{jobIdentification,jdbcType=VARCHAR},
      #{status,jdbcType=VARCHAR},
      #{conditionType,jdbcType=SMALLINT},
      #{concurrent,jdbcType=VARCHAR},
      #{misfirePolicy,jdbcType=VARCHAR},
      #{cronExpression,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR},
      #{createBy,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateBy,jdbcType=VARCHAR},
      #{updateTime,jdbcType=TIMESTAMP},
    </trim>
    ON CONFLICT (id) DO UPDATE SET
    <trim suffixOverrides=",">
      app_id = EXCLUDED.app_id,
      rule_identification = EXCLUDED.rule_identification,
      rule_name = EXCLUDED.rule_name,
      job_identification = EXCLUDED.job_identification,
      "status" = EXCLUDED.status,
      condition_type = EXCLUDED.condition_type,
      concurrent = EXCLUDED.concurrent,
      misfire_policy = EXCLUDED.misfire_policy,
      cron_expression = EXCLUDED.cron_expression,
      remark = EXCLUDED.remark,
      create_by = EXCLUDED.create_by,
      create_time = EXCLUDED.create_time,
      update_by = EXCLUDED.update_by,
      update_time = EXCLUDED.update_time,
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.basiclab.iot.rule.domain.Rule" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into "rule"
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="ruleIdentification != null">
        rule_identification,
      </if>
      <if test="ruleName != null">
        rule_name,
      </if>
      <if test="jobIdentification != null">
        job_identification,
      </if>
      <if test="status != null">
        "status",
      </if>
      <if test="conditionType != null">
        condition_type,
      </if>
      <if test="concurrent != null">
        concurrent,
      </if>
      <if test="misfirePolicy != null">
        misfire_policy,
      </if>
      <if test="cronExpression != null">
        cron_expression,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="ruleIdentification != null">
        #{ruleIdentification,jdbcType=VARCHAR},
      </if>
      <if test="ruleName != null">
        #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="jobIdentification != null">
        #{jobIdentification,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="conditionType != null">
        #{conditionType,jdbcType=SMALLINT},
      </if>
      <if test="concurrent != null">
        #{concurrent,jdbcType=VARCHAR},
      </if>
      <if test="misfirePolicy != null">
        #{misfirePolicy,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null">
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    ON CONFLICT (id) DO UPDATE SET
    <trim suffixOverrides=",">
      <if test="appId != null">
        app_id = EXCLUDED.app_id,
      </if>
      <if test="ruleIdentification != null">
        rule_identification = EXCLUDED.rule_identification,
      </if>
      <if test="ruleName != null">
        rule_name = EXCLUDED.rule_name,
      </if>
      <if test="jobIdentification != null">
        job_identification = EXCLUDED.job_identification,
      </if>
      <if test="status != null">
        "status" = EXCLUDED.status,
      </if>
      <if test="conditionType != null">
        condition_type = EXCLUDED.condition_type,
      </if>
      <if test="concurrent != null">
        concurrent = EXCLUDED.concurrent,
      </if>
      <if test="misfirePolicy != null">
        misfire_policy = EXCLUDED.misfire_policy,
      </if>
      <if test="cronExpression != null">
        cron_expression = EXCLUDED.cron_expression,
      </if>
      <if test="remark != null">
        remark = EXCLUDED.remark,
      </if>
      <if test="createBy != null">
        create_by = EXCLUDED.create_by,
      </if>
      <if test="createTime != null">
        create_time = EXCLUDED.create_time,
      </if>
      <if test="updateBy != null">
        update_by = EXCLUDED.update_by,
      </if>
      <if test="updateTime != null">
        update_time = EXCLUDED.update_time,
      </if>
    </trim>
  </insert>
  <select id="selectRuleList" parameterType="com.basiclab.iot.rule.domain.Rule"
          resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from rule
    <where>
      <if test="ruleName != null  and ruleName != ''">
        and rule_name like concat('%', #{ruleName}::text, '%')
      </if>
      <if test="appId != null  and appId != ''">
        and app_id = #{appId}
      </if>
      <if test="ruleIdentification != null  and ruleIdentification != ''">
        and rule_identification like concat('%', #{ruleIdentification}::text, '%')
      </if>
      <if test="jobIdentification != null  and jobIdentification != ''">
        and job_identification like concat('%', #{jobIdentification}::text, '%')
      </if>
      <if test="status != null  and status != ''">
        and status = #{status}
      </if>
      <if test="conditionType != null  and conditionType != ''">
        and condition_type = #{conditionType}
      </if>
      <if test="cronExpression != null  and cronExpression != ''">
        and cron_expression = #{cronExpression}
      </if>
      <if test="misfirePolicy != null  and misfirePolicy != ''">
        and misfire_policy = #{misfirePolicy}
      </if>
      <if test="concurrent != null  and concurrent != ''">
        and concurrent = #{concurrent}
      </if>
     <if test="remark != null  and remark != ''">
        and remark = #{remark}
      </if>
    </where>
    <include refid="OrderByCreateTimeDesc"/>
  </select>



  <select id="selectByRuleIdentification" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from "rule"
    where rule_identification = #{ruleIdentification,jdbcType=VARCHAR}
  </select>
</mapper>